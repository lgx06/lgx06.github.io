<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lgx</title>
  
  
  <link href="https://lgx06.github.io/atom.xml" rel="self"/>
  
  <link href="https://lgx06.github.io/"/>
  <updated>2020-09-20T10:10:44.661Z</updated>
  <id>https://lgx06.github.io/</id>
  
  <author>
    <name>lgx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝牙设备</title>
    <link href="https://lgx06.github.io/2020/09/19/%E8%93%9D%E7%89%99%E8%AE%BE%E5%A4%87/"/>
    <id>https://lgx06.github.io/2020/09/19/%E8%93%9D%E7%89%99%E8%AE%BE%E5%A4%87/</id>
    <published>2020-09-19T07:12:31.000Z</published>
    <updated>2020-09-20T10:10:44.661Z</updated>
    
    <content type="html"><![CDATA[<p>代码部分:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPY&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            var selected_device;           &#x2F;&#x2F; 保存用户选择的蓝牙设备</span><br><span class="line">            var connected_server;           &#x2F;&#x2F;在第二课基础上添加的变量，保存用户连接的蓝牙设备</span><br><span class="line">            var connected&#x3D;false;            &#x2F;&#x2F;在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span><br><span class="line">            function discoverDevices()</span><br><span class="line">            &#123;</span><br><span class="line">                console.log(&quot;discoverDevices&quot;);     &#x2F;&#x2F;consol.log 控制台打印输出</span><br><span class="line">                var options &#x3D; &#123;acceptAllDevices:true&#125;        &#x2F;&#x2F;发现所有周边蓝牙设备</span><br><span class="line">                navigator.bluetooth.requestDevice(options)      &#x2F;&#x2F;Navigator对象，包含有关游览器的信息</span><br><span class="line">                .then(device &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(&#39;&gt; Name:        &#39; + device.name);</span><br><span class="line">                    console.log(&#39;&gt; Id:          &#39; + device.id);</span><br><span class="line">                    console.log(&#39;&gt; Connected:   &#39; + device.gatt.connected);</span><br><span class="line">                    selected_device &#x3D; device;</span><br><span class="line">                    console.log(selected_device);</span><br><span class="line">                    connect();  </span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(error &#x3D;&gt;&#123;</span><br><span class="line">                    alert(&#39;ERROR:&#39; +error);</span><br><span class="line">                    console.log(&#39;ERROR:&#39; +error);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            function connect()</span><br><span class="line">            &#123;</span><br><span class="line">                console.log(&quot;connecting&quot;);</span><br><span class="line">                selected_device.gatt.connect()</span><br><span class="line">                .then(</span><br><span class="line">                    function(server)                            &#x2F;&#x2F;表示连接成功</span><br><span class="line">                    &#123;</span><br><span class="line">                        console.log(&quot;Connected to&quot; + server.device.id);</span><br><span class="line">                        console.log(&quot;Connected&#x3D;&quot; + server.connected);</span><br><span class="line">                        connected_server &#x3D; server;</span><br><span class="line">                        setConnectedStatus(true);</span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    function(error)                              &#x2F;&#x2F;表示连接失败</span><br><span class="line">                    &#123;</span><br><span class="line">                        console.log(&quot;ERROR:could not connct-&quot; + error);</span><br><span class="line">                        alert(&quot;ERROR:could not connct-&quot; + error);</span><br><span class="line">                        setConnectedStatus(false);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            function setConnectedStatus(status)</span><br><span class="line">            &#123;</span><br><span class="line">                connected&#x3D;status;</span><br><span class="line">                document.getElementById(&#39;status_connected&#39;).innerHTML&#x3D;status;</span><br><span class="line">                if(status&#x3D;&#x3D;true)</span><br><span class="line">                &#123;</span><br><span class="line">                    document.getElementById(&#39;btn_scan&#39;).innerHTML&#x3D;&quot;Disconnect&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    document.getElementById(&#39;btn_scan&#39;).innerHTML&#x3D;&quot;Discover Devices&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;       </span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">            Status  &lt;!-- 显示蓝牙状态--&gt;</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;table border&#x3D;&quot;1&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;    &lt;b&gt;Connected&lt;&#x2F;b&gt;    &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td id&#x3D;&quot;status_connected&quot;&gt;False&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;&#x2F;table&gt; </span><br><span class="line">        &lt;h2&gt;Device Discovery &lt;&#x2F;h2&gt;     &lt;!-- 扫描&#x2F;发现蓝牙设备 --&gt;</span><br><span class="line">        &lt;button id&#x3D;&quot;btn_scan&quot; onclick&#x3D;&quot;discoverDevices()&quot;&gt;</span><br><span class="line">            Start scan</span><br><span class="line">        &lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>调用谷歌浏览器的内置蓝牙功能搜索周边设备找到自己的设备名，然后在网页的JS里面调用蓝牙的库函数搜索蓝牙设备，然后在蓝牙设备列表里面找到自己的设备，点击连接表格里面的连接状态就变成<code>TRUE</code>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;代码部分:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;COPY&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>矩阵控制灯</title>
    <link href="https://lgx06.github.io/2020/09/19/%E7%9F%A9%E9%98%B5%E6%8E%A7%E5%88%B6%E7%81%AF/"/>
    <id>https://lgx06.github.io/2020/09/19/%E7%9F%A9%E9%98%B5%E6%8E%A7%E5%88%B6%E7%81%AF/</id>
    <published>2020-09-19T07:11:44.000Z</published>
    <updated>2020-09-20T10:10:44.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本章任务"><a href="#本章任务" class="headerlink" title="本章任务"></a>本章任务</h2><ul><li>使用网页控制板子上的任意一盏灯</li></ul><h3 id="相关代码修改如下："><a href="#相关代码修改如下：" class="headerlink" title="相关代码修改如下："></a>相关代码修改如下：</h3><ol><li>首先，要想控制板上任意一盏灯首先要添加25个按钮俩控制板子上的灯</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPY&lt;h3&gt;控制单个小灯亮暗&lt;&#x2F;h3&gt; </span><br><span class="line">       &lt;button id&#x3D;&quot;led00&quot; onclick&#x3D;&quot;led00()&quot;&gt;第一行第一列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led01&quot; onclick&#x3D;&quot;led01()&quot;&gt;第一行第二列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led02&quot; onclick&#x3D;&quot;led02()&quot;&gt;第一行第三列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led03&quot; onclick&#x3D;&quot;led03()&quot;&gt;第一行第四列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led04&quot; onclick&#x3D;&quot;led04()&quot;&gt;第一行第五列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led10&quot; onclick&#x3D;&quot;led10()&quot;&gt;第二行第一列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led11&quot; onclick&#x3D;&quot;led11()&quot;&gt;第二行第二列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led12&quot; onclick&#x3D;&quot;led12()&quot;&gt;第二行第三列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led13&quot; onclick&#x3D;&quot;led13()&quot;&gt;第二行第四列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led14&quot; onclick&#x3D;&quot;led14()&quot;&gt;第二行第五列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led20&quot; onclick&#x3D;&quot;led20()&quot;&gt;第三行第一列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led21&quot; onclick&#x3D;&quot;led21()&quot;&gt;第三行第二列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led22&quot; onclick&#x3D;&quot;led22()&quot;&gt;第三行第三列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led23&quot; onclick&#x3D;&quot;led23()&quot;&gt;第三行第四列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led24&quot; onclick&#x3D;&quot;led24()&quot;&gt;第三行第五列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led30&quot; onclick&#x3D;&quot;led30()&quot;&gt;第四行第一列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led31&quot; onclick&#x3D;&quot;led31()&quot;&gt;第四行第二列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led32&quot; onclick&#x3D;&quot;led32()&quot;&gt;第四行第三列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led33&quot; onclick&#x3D;&quot;led33()&quot;&gt;第四行第四列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led34&quot; onclick&#x3D;&quot;led34()&quot;&gt;第四行第五列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led40&quot; onclick&#x3D;&quot;led40()&quot;&gt;第五行第一列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led41&quot; onclick&#x3D;&quot;led41()&quot;&gt;第五行第二列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led42&quot; onclick&#x3D;&quot;led42()&quot;&gt;第五行第三列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led43&quot; onclick&#x3D;&quot;led43()&quot;&gt;第五行第四列&lt;&#x2F;button&gt;</span><br><span class="line">       &lt;button id&#x3D;&quot;led44&quot; onclick&#x3D;&quot;led44()&quot;&gt;第五行第五列&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><ol><li>每个按钮控制一个小灯</li></ol><p>Javascript</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COPYfunction led00()              &#x2F;&#x2F;第一行</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[0]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[0]&#x3D;led[0]|(1&lt;&lt;4);</span><br><span class="line">               c[0]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[0]&#x3D;led[0]&amp;(~(1&lt;&lt;4));</span><br><span class="line">               c[0]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led01()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[1]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[0]&#x3D;led[0]|(1&lt;&lt;3);</span><br><span class="line">               c[1]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[0]&#x3D;led[0]&amp;(~(1&lt;&lt;3));</span><br><span class="line">               c[1]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led02()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[2]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[0]&#x3D;led[0]|(1&lt;&lt;2);</span><br><span class="line">               c[2]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[0]&#x3D;led[0]&amp;(~(1&lt;&lt;2));</span><br><span class="line">               c[2]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led03()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[3]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[0]&#x3D;led[0]|(1&lt;&lt;1);</span><br><span class="line">               c[3]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[0]&#x3D;led[0]&amp;(~(1&lt;&lt;1));</span><br><span class="line">               c[3]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led04()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[4]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[0]&#x3D;led[0]|(1&lt;&lt;0);</span><br><span class="line">               c[4]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[0]&#x3D;led[0]&amp;(~(1&lt;&lt;0));</span><br><span class="line">               c[4]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       function led10()                   &#x2F;&#x2F;第二行</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[5]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[1]&#x3D;led[1]|(1&lt;&lt;4);</span><br><span class="line">               c[5]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[1]&#x3D;led[1]&amp;(~(1&lt;&lt;4));</span><br><span class="line">               c[5]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led11()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[6]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[1]&#x3D;led[1]|(1&lt;&lt;3);</span><br><span class="line">               c[6]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[1]&#x3D;led[1]&amp;(~(1&lt;&lt;3));</span><br><span class="line">               c[6]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led12()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[7]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[1]&#x3D;led[1]|(1&lt;&lt;2);</span><br><span class="line">               c[7]&#x3D;1;</span><br><span class="line">         </span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       function led20()                   &#x2F;&#x2F;第三行</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[10]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[2]&#x3D;led[2]|(1&lt;&lt;4);</span><br><span class="line">               c[10]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[2]&#x3D;led[2]&amp;(~(1&lt;&lt;4));</span><br><span class="line">               c[10]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led21()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[11]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[2]&#x3D;led[2]|(1&lt;&lt;3);</span><br><span class="line">               c[11]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[2]&#x3D;led[2]&amp;(~(1&lt;&lt;3));</span><br><span class="line">               c[11]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led22()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[12]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[2]&#x3D;led[2]|(1&lt;&lt;2);</span><br><span class="line">               c[12]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[2]&#x3D;led[2]&amp;(~(1&lt;&lt;2));</span><br><span class="line">               c[12]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led23()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[13]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[2]&#x3D;led[2]|(1&lt;&lt;1);</span><br><span class="line">               c[13]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[2]&#x3D;led[2]&amp;(~(1&lt;&lt;1));</span><br><span class="line">               c[13]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led24()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[14]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[2]&#x3D;led[2]|(1&lt;&lt;0);</span><br><span class="line">               c[14]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[2]&#x3D;led[2]&amp;(~(1&lt;&lt;0));</span><br><span class="line">               c[14]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       function led30()                   &#x2F;&#x2F;第四行</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[15]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[3]&#x3D;led[3]|(1&lt;&lt;4);</span><br><span class="line">               c[15]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[3]&#x3D;led[3]&amp;(~(1&lt;&lt;4));</span><br><span class="line">               c[15]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led31()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[16]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[3]&#x3D;led[3]|(1&lt;&lt;3);</span><br><span class="line">               c[16]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[3]&#x3D;led[3]&amp;(~(1&lt;&lt;3));</span><br><span class="line">               c[16]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led32()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[17]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[3]&#x3D;led[3]|(1&lt;&lt;2);</span><br><span class="line">               c[17]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[3]&#x3D;led[3]&amp;(~(1&lt;&lt;2));</span><br><span class="line">               c[17]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led33()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[18]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[3]&#x3D;led[3]|(1&lt;&lt;1);</span><br><span class="line">               c[18]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[3]&#x3D;led[3]&amp;(~(1&lt;&lt;1));</span><br><span class="line">               c[18]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led34()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[19]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[3]&#x3D;led[3]|(1&lt;&lt;0);</span><br><span class="line">               c[19]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[3]&#x3D;led[3]&amp;(~(1&lt;&lt;0));</span><br><span class="line">               c[19]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led40()                   &#x2F;&#x2F;第五行</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[20]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[4]&#x3D;led[4]|(1&lt;&lt;4);</span><br><span class="line">               c[20]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[4]&#x3D;led[4]&amp;(~(1&lt;&lt;4));</span><br><span class="line">               c[20]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led41()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[21]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[4]&#x3D;led[4]|(1&lt;&lt;3);</span><br><span class="line">               c[21]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[4]&#x3D;led[4]&amp;(~(1&lt;&lt;3));</span><br><span class="line">               c[21]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led42()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[22]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[4]&#x3D;led[4]|(1&lt;&lt;2);</span><br><span class="line">               c[22]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[4]&#x3D;led[4]&amp;(~(1&lt;&lt;2));</span><br><span class="line">               c[22]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led43()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[23]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[4]&#x3D;led[4]|(1&lt;&lt;1);</span><br><span class="line">               c[23]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[4]&#x3D;led[4]&amp;(~(1&lt;&lt;1));</span><br><span class="line">               c[23]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       function led44()</span><br><span class="line">       &#123;</span><br><span class="line">           if(c[24]&#x3D;&#x3D;0)</span><br><span class="line">           &#123;</span><br><span class="line">               led[4]&#x3D;led[4]|(1&lt;&lt;0);</span><br><span class="line">               c[24]&#x3D;1;</span><br><span class="line">           &#125;</span><br><span class="line">           else&#123;</span><br><span class="line">               led[4]&#x3D;led[4]&amp;(~(1&lt;&lt;0));</span><br><span class="line">               c[24]&#x3D;0;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="相关现象"><a href="#相关现象" class="headerlink" title="相关现象"></a>相关现象</h4><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200624105820.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200624105820.png" alt="img"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本章任务&quot;&gt;&lt;a href=&quot;#本章任务&quot; class=&quot;headerlink&quot; title=&quot;本章任务&quot;&gt;&lt;/a&gt;本章任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用网页控制板子上的任意一盏灯&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;相关代码修改如下：&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LED</title>
    <link href="https://lgx06.github.io/2020/09/19/led/"/>
    <id>https://lgx06.github.io/2020/09/19/led/</id>
    <published>2020-09-19T07:08:44.000Z</published>
    <updated>2020-09-20T10:10:44.821Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">        var    selected_device; &#x2F;&#x2F;选择设备</span><br><span class="line">        var    connected_server; &#x2F;&#x2F;连接设备</span><br><span class="line">        var    connected&#x3D;false;&#x2F;&#x2F;连接状态</span><br><span class="line">        var    services_discovered&#x3D;false;&#x2F;&#x2F;发现设备状态</span><br><span class="line">        &#x2F;&#x2F; 添加服务和特性状态变量 </span><br><span class="line">        var has_accelerometer_service &#x3D; false; &#x2F;&#x2F;加速度服务状态</span><br><span class="line">        var has_accelerometer_data &#x3D; false; &#x2F;&#x2F;加速度特性状态</span><br><span class="line">        var has_led_service &#x3D; false;&#x2F;&#x2F;led服务状态</span><br><span class="line">        var has_led_matrix_state &#x3D; false; &#x2F;&#x2F;led控制特性状态</span><br><span class="line">        var has_device_information_service &#x3D; false; &#x2F;&#x2F;设备信息服务状态</span><br><span class="line">        var has_model_name_string &#x3D; false; &#x2F;&#x2F;设备信息特性状态</span><br><span class="line">        var has_temperature_service &#x3D;false;    &#x2F;&#x2F;温度服务状态</span><br><span class="line">        var has_tem_temperature &#x3D; false;  &#x2F;&#x2F;温度特性状态</span><br><span class="line">         &#x2F;&#x2F; 服务 UUIDs </span><br><span class="line">       ACCELEROMETER_SERVICE &#x3D; &#39;e95d0753-251d-470a-a062-fa1922dfa9a8&#39;; </span><br><span class="line">       LED_SERVICE &#x3D; &#39;e95dd91d-251d-470a-a062-fa1922dfa9a8&#39;; </span><br><span class="line">       DEVICE_INFORMATION_SERVICE &#x3D; &#39;0000180a-0000-1000-8000-00805f9b34fb&#39;;</span><br><span class="line">       TEMPERATURE_SERVICE &#x3D; &#39;e95d6100-251d-470a-a062-fa1922dfa9a8&#39;; </span><br><span class="line">       &#x2F;&#x2F; 特性 UUIDs </span><br><span class="line">       ACCELEROMETER_DATA &#x3D; &#39;e95dca4b-251d-470a-a062-fa1922dfa9a8&#39;; </span><br><span class="line">       LED_MATRIX_STATE  &#x3D; &#39;e95d7b77-251d-470a-a062-fa1922dfa9a8&#39;; </span><br><span class="line">       MODEL_NUMBER_STRING &#x3D; &#39;00002a24-0000-1000-8000-00805f9b34fb&#39;;</span><br><span class="line">       TEM_TEMPERATURE &#x3D; &#39;e95d1b25-251d-470a-a062-fa1922dfa9a8&#39;;  </span><br><span class="line">       &#x2F;&#x2F; 添加特性变量 </span><br><span class="line">       var led_matrix_state; </span><br><span class="line">        var model_number_string;</span><br><span class="line">        var accelerometer_data;</span><br><span class="line">        var tem_temperature;    </span><br><span class="line">          &#x2F;&#x2F;添加服务，特性相关参数</span><br><span class="line">        var service_count;</span><br><span class="line">         var services_discovered;</span><br><span class="line">         var characteristics_discovered;  </span><br><span class="line">         var characteristic_count ;               </span><br><span class="line">         function discoverOrdisconnectDevices()&#x2F;&#x2F; 断开连接</span><br><span class="line">        &#123;</span><br><span class="line">            console.log(&quot;discoverOrdisconnectDevices&quot;);</span><br><span class="line">            if(!connected)</span><br><span class="line">            discoverDevices();</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                selected_device.gatt.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        function onDisconnected()&#x2F;&#x2F;连接</span><br><span class="line">        &#123;</span><br><span class="line">            console.log(&quot;onDisconnected&quot;);</span><br><span class="line">            resetUI();</span><br><span class="line">        &#125;</span><br><span class="line">&#x2F;&#x2F;function input.temperature(): number;</span><br><span class="line">        function discoverDevices()&#x2F;&#x2F; 搜索设备函数</span><br><span class="line">        &#123; </span><br><span class="line">            console.log(&quot;discoverDevices&quot;);</span><br><span class="line">            var options &#x3D; &#123;acceptAllDevices:true,</span><br><span class="line">                optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE,TEMPERATURE_SERVICE]  &#x2F;&#x2F;在第5节课上添加</span><br><span class="line">            &#125;        &#x2F;&#x2F;发现所有周边蓝牙设备</span><br><span class="line">           </span><br><span class="line">            navigator.bluetooth.requestDevice(options)</span><br><span class="line">            .then(device &#x3D;&gt; &#123;</span><br><span class="line">                console.log(&#39;&gt; Name:&#39; + device.name);</span><br><span class="line">                console.log(&#39;&gt; Id:&#39; + device.id);</span><br><span class="line">                console.log(&#39;&gt; Connected:&#39; + device.gatt.connected);</span><br><span class="line">                selected_device &#x3D; device;</span><br><span class="line">                console.log(selected_device);</span><br><span class="line">                connect();</span><br><span class="line">                &#125;)</span><br><span class="line">            .catch(error &#x3D;&gt; &#123;</span><br><span class="line">                alert(&#39;ERROR&#39; +error);</span><br><span class="line">                console.log(&#39;ERROR&#39; +error);</span><br><span class="line">                &#125;);       </span><br><span class="line">        &#125;       </span><br><span class="line">        function connect()&#x2F;&#x2F;连接函数</span><br><span class="line">        &#123;</span><br><span class="line">            console.log(&quot;connecting&quot;);</span><br><span class="line">            selected_device.gatt.connect()</span><br><span class="line">            .then(</span><br><span class="line">                function (server)</span><br><span class="line">                &#123;</span><br><span class="line">                    console.log(&quot;Connected to&quot; + server.device.id);</span><br><span class="line">                    console.log(&quot;Connected &quot; + server.connected);</span><br><span class="line">                    selected_device.addEventListener(&#39;gattserverdisconnected&#39;,onDisconnected);</span><br><span class="line">                    connected_server &#x3D;server;</span><br><span class="line">                    discoverSvcsAndChars(); &#x2F;&#x2F;在第5课基础上添加的函数</span><br><span class="line">                    setConnectedStatus(true);</span><br><span class="line">                &#125;,</span><br><span class="line">                function (error)</span><br><span class="line">                &#123;</span><br><span class="line">                    console.log(&quot;ERROR:could not connct-&quot; + error);</span><br><span class="line">                   alert(&quot;ERROR:could not connct-&quot; + error);</span><br><span class="line">                   setConnectedStatus(false);</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        function setConnectedStatus(status)&#x2F;&#x2F;设置连接状态</span><br><span class="line">        &#123;</span><br><span class="line">            connected&#x3D;status;</span><br><span class="line">            document.getElementById(&#39;status_connected&#39;).innerHTML &#x3D; status;</span><br><span class="line">            if(status&#x3D;&#x3D;true)</span><br><span class="line">            &#123;</span><br><span class="line">                document.getElementById(&#39;btn_scan&#39;).innerHTML &#x3D; &quot;Disconnect&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                document.getElementById(&#39;btn_scan&#39;).innerHTML &#x3D; &quot;Discover Devices&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        function setDiscoveryStatus(status)&#x2F;&#x2F;设置发现状态</span><br><span class="line">        &#123;</span><br><span class="line">            services_discovered&#x3D;status;</span><br><span class="line">            document.getElementById(&#39;status_discovered&#39;).innerHTML&#x3D;status;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function resetUI()&#x2F;&#x2F;重置页面</span><br><span class="line">        &#123;</span><br><span class="line">            setConnectedStatus(false);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        function discoverSvcsAndChars()    &#x2F;&#x2F;发现服务和特性</span><br><span class="line">        &#123;  </span><br><span class="line">            console.log(&quot;discoverSvcsAndChars server&#x3D;&quot; + connected_server); </span><br><span class="line">            connected_server.getPrimaryServices()</span><br><span class="line">            .then(services &#x3D;&gt; </span><br><span class="line">            &#123;    </span><br><span class="line">                    has_accelerometer_service &#x3D; false;    </span><br><span class="line">                    has_led_service &#x3D; false;    </span><br><span class="line">                    has_device_information_service &#x3D; false; </span><br><span class="line">                    has_temperature_service&#x3D; false;</span><br><span class="line"></span><br><span class="line">                    services_discovered &#x3D; 0;    </span><br><span class="line">                    service_count &#x3D; services.length;    </span><br><span class="line">                    console.log(&quot;Got &quot; + service_count + &quot; services&quot;); </span><br><span class="line">        </span><br><span class="line">                    services.forEach(service &#x3D;&gt; </span><br><span class="line">                    &#123;     </span><br><span class="line">                        if (service.uuid &#x3D;&#x3D; ACCELEROMETER_SERVICE)</span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_accelerometer_service &#x3D; true;    </span><br><span class="line">                        &#125;   </span><br><span class="line">                        if (service.uuid &#x3D;&#x3D; LED_SERVICE) </span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_led_service &#x3D; true;     </span><br><span class="line">                        &#125;     </span><br><span class="line">                       if (service.uuid &#x3D;&#x3D; DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_device_information_service &#x3D; true;     </span><br><span class="line">                        &#125; </span><br><span class="line">                        if (service.uuid &#x3D;&#x3D; TEMPERATURE_SERVICE) &#x2F;&#x2F;温度</span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_temperature_service &#x3D; true;     </span><br><span class="line">                        &#125;        </span><br><span class="line">                        console.log(&#39;Getting Characteristics for service &#39; + service.uuid);     </span><br><span class="line">                        service.getCharacteristics()</span><br><span class="line">                        .then(characteristics &#x3D;&gt; </span><br><span class="line">                        &#123;      </span><br><span class="line">                            console.log(&#39;&gt; Service: &#39; + service.uuid);      </span><br><span class="line">                            services_discovered++;     </span><br><span class="line">                            characteristics_discovered &#x3D; 0;      </span><br><span class="line">                            characteristic_count &#x3D; characteristics.length;      </span><br><span class="line">                            characteristics.forEach(characteristic &#x3D;&gt; </span><br><span class="line">                            &#123;       </span><br><span class="line">                                characteristics_discovered++;       </span><br><span class="line">                                console.log(&#39;&gt;&gt; Characteristic: &#39; + characteristic.uuid);       </span><br><span class="line">                                if (characteristic.uuid &#x3D;&#x3D; ACCELEROMETER_DATA)</span><br><span class="line">                                &#123;        </span><br><span class="line">                                    accelerometer_data &#x3D; characteristic;        </span><br><span class="line">                                    has_accelerometer_data &#x3D; true;       </span><br><span class="line">                                &#125;      </span><br><span class="line">                                if (characteristic.uuid &#x3D;&#x3D; LED_MATRIX_STATE) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    led_matrix_state &#x3D; characteristic;        </span><br><span class="line">                                    has_led_matrix_state &#x3D; true;       </span><br><span class="line">                                &#125;       </span><br><span class="line">                                if (characteristic.uuid &#x3D;&#x3D; MODEL_NUMBER_STRING) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    model_number_string &#x3D; characteristic;        </span><br><span class="line">                                    has_model_name_string &#x3D; true;       </span><br><span class="line">                                &#125;</span><br><span class="line">                                if(characteristic.uuid &#x3D;&#x3D; TEM_TEMPERATURE)  &#x2F;&#x2F;温度</span><br><span class="line">                                &#123;</span><br><span class="line">                                    tem_temperature &#x3D; characteristic; </span><br><span class="line">                                    has_tem_temperature &#x3D; true;</span><br><span class="line">                                &#125;     </span><br><span class="line">                                if (services_discovered &#x3D;&#x3D; service_count &amp;&amp; characteristics_discovered &#x3D;&#x3D; characteristic_count) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    console.log(&quot;FINISHED DISCOVERY&quot;); </span><br><span class="line">                                    setDiscoveryStatus(true);       </span><br><span class="line">                                    &#x2F;&#x2F;setDiscoveryStatus(true);                  </span><br><span class="line">                                &#125;    </span><br><span class="line">                            &#125;);     </span><br><span class="line">                        &#125;);    </span><br><span class="line">                    &#125;);  </span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;  </span><br><span class="line">var i&#x3D;0,j&#x3D;0;</span><br><span class="line">        function randomLEDs(ct)   &#x2F;&#x2F;控制led</span><br><span class="line">        &#123;  </span><br><span class="line">            console.log(&quot;randomLEDs&quot;);   </span><br><span class="line">            &#x2F;&#x2F; state validation   </span><br><span class="line">            if (!connected) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: Discover and connect to a device before using this function&quot;);     </span><br><span class="line">                return;   </span><br><span class="line">            &#125;   </span><br><span class="line">            if (!services_discovered) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: Service discovery has not yet completed&quot;);     </span><br><span class="line">                return;  </span><br><span class="line">            &#125;   </span><br><span class="line">            if (!has_led_service) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: The connected device does not contain the LED service&quot;);     </span><br><span class="line">                return;  </span><br><span class="line">            &#125;   </span><br><span class="line">            if (!has_led_matrix_state) </span><br><span class="line">            &#123;      </span><br><span class="line">                alert(&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;);      </span><br><span class="line">                return;   </span><br><span class="line">            &#125;   </span><br><span class="line">var led_array&#x3D;[];</span><br><span class="line">if(ct&#x3D;&#x3D;0)</span><br><span class="line">&#123;</span><br><span class="line"> led_array[0] &#x3D;1&lt;&lt;i;</span><br><span class="line"> led_array[1] &#x3D; 1&lt;&lt;i;   </span><br><span class="line"> led_array[2] &#x3D; 1&lt;&lt;i;   </span><br><span class="line"> led_array[3] &#x3D; 1&lt;&lt;i;   </span><br><span class="line"> led_array[4] &#x3D; 1&lt;&lt;i;</span><br><span class="line"> i++;</span><br><span class="line"> if(i&#x3D;&#x3D;5)i&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">else if(ct&#x3D;&#x3D;1)</span><br><span class="line">&#123;</span><br><span class="line">led_array[0] &#x3D; 0;</span><br><span class="line">led_array[1] &#x3D; 0;   </span><br><span class="line">led_array[2] &#x3D; 0;   </span><br><span class="line">led_array[3] &#x3D; 0;   </span><br><span class="line">led_array[4] &#x3D; 0;</span><br><span class="line">led_array[j] &#x3D; 31;</span><br><span class="line">j++;</span><br><span class="line">if(j&#x3D;&#x3D;5)j&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">             &#x2F;&#x2F; Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span><br><span class="line">            &#x2F;*led_array[0] &#x3D;10;  </span><br><span class="line">            led_array[1] &#x3D; 31;   </span><br><span class="line">            led_array[2] &#x3D; 31;   </span><br><span class="line">            led_array[3] &#x3D; 14;   </span><br><span class="line">            led_array[4] &#x3D; 4;*&#x2F;</span><br><span class="line">            &#x2F;*led_array[0] &#x3D; 31;  </span><br><span class="line">            led_array[1] &#x3D; 17;   </span><br><span class="line">            led_array[2] &#x3D; 17;   </span><br><span class="line">            led_array[3] &#x3D; 17;   </span><br><span class="line">            led_array[4] &#x3D; 31; *&#x2F;</span><br><span class="line"> </span><br><span class="line">            var led_matrix_data &#x3D; new Uint8Array(led_array); </span><br><span class="line"></span><br><span class="line">            led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class="line">            .then(_ &#x3D;&gt; &#123;   </span><br><span class="line">                console.log(&#39;LED matrix state changed&#39;);  </span><br><span class="line">                &#125;)  </span><br><span class="line">            .catch(error &#x3D;&gt; &#123;   </span><br><span class="line">                console.log(&#39;Error: &#39; + error);   </span><br><span class="line">                alert(&#39;Error: &#39; + error);   return;  </span><br><span class="line">                &#125;); </span><br><span class="line">        &#125;  </span><br><span class="line">        function readModelNumber()  &#x2F;&#x2F; 蓝牙信息服务</span><br><span class="line">        &#123;  </span><br><span class="line">            console.log(&quot;readModelNumber&quot;);   </span><br><span class="line">            &#x2F;&#x2F; state validation   </span><br><span class="line">            if (!connected) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: Discover and connect to a device before using this function&quot;);     </span><br><span class="line">                return;   </span><br><span class="line">            &#125;   </span><br><span class="line">            if (!services_discovered) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: Service discovery has not yet completed&quot;);     </span><br><span class="line">                return;   </span><br><span class="line">            &#125;    </span><br><span class="line">            if (!has_device_information_service) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: The connected device does not contain the device information service&quot;);     </span><br><span class="line">                return;   </span><br><span class="line">            &#125;   </span><br><span class="line">            if (!has_model_name_string) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(&quot;Error: The connected device does not contain the model name string characteristic&quot;);     </span><br><span class="line">                return;   </span><br><span class="line">            &#125;   </span><br><span class="line">            </span><br><span class="line">            model_number_string.readValue()</span><br><span class="line">            .then(value &#x3D;&gt; &#123;   </span><br><span class="line">                data &#x3D; new Uint8Array(value.buffer);   </span><br><span class="line">                model_number_string &#x3D; new TextDecoder(&quot;utf-8&quot;).decode(data);  </span><br><span class="line">                console.log(model_number_string);   </span><br><span class="line">                document.getElementById(&quot;model_number&quot;).innerHTML &#x3D; model_number_string;  </span><br><span class="line">                &#125;)  </span><br><span class="line">            .catch(error &#x3D;&gt; &#123;  </span><br><span class="line">                console.log(&#39;Error: &#39; + error);   </span><br><span class="line">                alert(&#39;Error: &#39; + error);   </span><br><span class="line">                return;  </span><br><span class="line">                &#125;); </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">  function accelerometer()   &#x2F;&#x2F;加速度传感器</span><br><span class="line"> &#123;  </span><br><span class="line">     console.log(&quot;accelerometer&quot;);   </span><br><span class="line">     &#x2F;&#x2F; state validation   </span><br><span class="line">     if (!connected) </span><br><span class="line">     &#123;     </span><br><span class="line">         alert(&quot;Error: Discover and connect to a device before using this function&quot;);     </span><br><span class="line">         return;   </span><br><span class="line">     &#125;   </span><br><span class="line">     if (!services_discovered) </span><br><span class="line">     &#123;     </span><br><span class="line">         alert(&quot;Error: Service discovery has not yet completed&quot;);     </span><br><span class="line">         return;  </span><br><span class="line">     &#125;   </span><br><span class="line">     if (!has_accelerometer_service) </span><br><span class="line">     &#123;     </span><br><span class="line">         alert(&quot;Error: The connected device does not contain the accelerometer service&quot;);     </span><br><span class="line">         return;  </span><br><span class="line">     &#125;   </span><br><span class="line">     if (!has_accelerometer_data) </span><br><span class="line">     &#123;      </span><br><span class="line">         alert(&quot;Error: The connected device does not contain the accelerometer_data characteristic&quot;);      </span><br><span class="line">         return;   </span><br><span class="line">     &#125;   </span><br><span class="line"> </span><br><span class="line">     accelerometer_data.readValue()</span><br><span class="line">    .then(value &#x3D;&gt; &#123;</span><br><span class="line">      buffer &#x3D; value.buffer;</span><br><span class="line">      dataview &#x3D; new DataView(buffer);</span><br><span class="line">      X &#x3D; dataview.getUint16(0, true);</span><br><span class="line">      Y &#x3D; dataview.getUint16(2, true);</span><br><span class="line">      Z &#x3D; dataview.getUint16(4, true);</span><br><span class="line">      console.log(&quot;X&#x3D;&quot; + X + &quot;, Y&#x3D;&quot; + Y + &quot;, Z+&quot; + Z);</span><br><span class="line">      document.getElementById(&quot;ac_data&quot;).innerHTML &#x3D; &quot;X&#x3D;&quot; + X + &quot;, Y&#x3D;&quot; + Y + &quot;,Z&#x3D;&quot; + Z;</span><br><span class="line">        &#125;)  </span><br><span class="line">    .catch(error &#x3D;&gt; &#123;  </span><br><span class="line">        console.log(&#39;Error: &#39; + error);   </span><br><span class="line">        alert(&#39;Error: &#39; + error);   </span><br><span class="line">        return;  </span><br><span class="line">        &#125;); </span><br><span class="line">        </span><br><span class="line">       </span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line">        &lt;&#x2F;script&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h2&gt;  Status</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;table border&#x3D;&quot;1&quot;&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;     &lt;b&gt;Connected&lt;&#x2F;b&gt;   &lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td&gt;     &lt;b&gt;Service Discovery Completed&lt;&#x2F;b&gt;   &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td id&#x3D;&quot;status_connected&quot;&gt; false &lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td id&#x3D;&quot;status_discovered&quot;&gt; false &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;&#x2F;table&gt;</span><br><span class="line">            &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">            Device Discovery or Disconnect</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;button id &#x3D; &quot;btn_scan&quot; onclick&#x3D;&quot;discoverOrdisconnectDevices()&quot;&gt;Start scan&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;Reading and Writing&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;h3&gt;Write Characteristic - Randomise Lights&lt;&#x2F;h3&gt;  </span><br><span class="line">        &lt;button id&#x3D;&quot;btn_write&quot; onclick&#x3D;&quot;randomLEDs(0)&quot;&gt;控制led行&lt;&#x2F;button&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;btu_write&quot; onclick&#x3D;&quot;randomLEDs(1)&quot;&gt;控制led列&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;h3&gt;Read Characteristic - Model number&lt;&#x2F;h3&gt;  </span><br><span class="line">        &lt;button id&#x3D;&quot;btn_read&quot; onclick&#x3D;&quot;readModelNumber()&quot;&gt;Read Model number&lt;&#x2F;button&gt; </span><br><span class="line">        &lt;div id&#x3D;&quot;model_number&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;h3&gt;accelerometer_data&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;btn_readAC&quot; onclick&#x3D;&quot;accelerometer()&quot;&gt;Read accelerometer_data&lt;&#x2F;button&gt; </span><br><span class="line">&lt;div id&#x3D;&quot;ac_data&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>使用数组控制LED小灯</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;head&amp;g</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LED小灯行列点亮</title>
    <link href="https://lgx06.github.io/2020/09/15/LED%E5%B0%8F%E7%81%AF%E8%A1%8C%E5%88%97%E7%82%B9%E4%BA%AE/"/>
    <id>https://lgx06.github.io/2020/09/15/LED%E5%B0%8F%E7%81%AF%E8%A1%8C%E5%88%97%E7%82%B9%E4%BA%AE/</id>
    <published>2020-09-15T10:29:18.000Z</published>
    <updated>2020-09-20T10:10:44.893Z</updated>
    
    <content type="html"><![CDATA[<p>先看一下代码：<a href="https://raw.githubusercontent.com/SCX-MI/tu-BED/master/20200625162142.png"><img src="https://s1.ax1x.com/2020/09/19/w5qjUK.png" alt="1"></a></p><p>这是行列点亮使用循环判断语句进行操作。最后利用谷歌浏览器测试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先看一下代码：&lt;a href=&quot;https://raw.githubusercontent.com/SCX-MI/tu-BED/master/20200625162142.png&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/09/19/w5qjU</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>控制任意一盏灯</title>
    <link href="https://lgx06.github.io/2020/09/15/%E6%8E%A7%E5%88%B6%E4%BB%BB%E6%84%8F%E4%B8%80%E7%9B%8F%E7%81%AF/"/>
    <id>https://lgx06.github.io/2020/09/15/%E6%8E%A7%E5%88%B6%E4%BB%BB%E6%84%8F%E4%B8%80%E7%9B%8F%E7%81%AF/</id>
    <published>2020-09-15T10:20:36.000Z</published>
    <updated>2020-09-20T10:10:44.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本章任务"><a href="#本章任务" class="headerlink" title="本章任务"></a>本章任务</h2><ul><li>使用网页控制板子上的任意一盏灯</li></ul><h3 id="相关代码修改如下："><a href="#相关代码修改如下：" class="headerlink" title="相关代码修改如下："></a>相关代码修改如下：</h3><ol><li>首先，要想控制板上任意一盏灯首先要添加25个按钮俩控制板子上的灯</li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>控制单个小灯亮暗<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led00&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led00()&quot;</span>&gt;</span>第一行第一列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led01&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led01()&quot;</span>&gt;</span>第一行第二列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led02&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led02()&quot;</span>&gt;</span>第一行第三列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led03&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led03()&quot;</span>&gt;</span>第一行第四列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led04&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led04()&quot;</span>&gt;</span>第一行第五列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led10&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led10()&quot;</span>&gt;</span>第二行第一列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led11&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led11()&quot;</span>&gt;</span>第二行第二列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led12&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led12()&quot;</span>&gt;</span>第二行第三列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led13&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led13()&quot;</span>&gt;</span>第二行第四列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led14&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led14()&quot;</span>&gt;</span>第二行第五列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led20&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led20()&quot;</span>&gt;</span>第三行第一列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led21&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led21()&quot;</span>&gt;</span>第三行第二列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led22&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led22()&quot;</span>&gt;</span>第三行第三列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led23&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led23()&quot;</span>&gt;</span>第三行第四列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led24&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led24()&quot;</span>&gt;</span>第三行第五列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led30&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led30()&quot;</span>&gt;</span>第四行第一列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led31&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led31()&quot;</span>&gt;</span>第四行第二列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led32&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led32()&quot;</span>&gt;</span>第四行第三列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led33&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led33()&quot;</span>&gt;</span>第四行第四列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led34&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led34()&quot;</span>&gt;</span>第四行第五列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led40&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led40()&quot;</span>&gt;</span>第五行第一列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led41&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led41()&quot;</span>&gt;</span>第五行第二列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led42&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led42()&quot;</span>&gt;</span>第五行第三列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led43&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led43()&quot;</span>&gt;</span>第五行第四列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;led44&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;led44()&quot;</span>&gt;</span>第五行第五列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>每个按钮控制一个小灯</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">led00</span>(<span class="params"></span>)              //第一行</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);</span><br><span class="line">               c[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line">               c[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led01</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">1</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">               c[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">               c[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led02</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">2</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>);</span><br><span class="line">               c[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">               c[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led03</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">3</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line">               c[<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line">               c[<span class="number">3</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led04</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">4</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</span><br><span class="line">               c[<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">0</span>]=led[<span class="number">0</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));</span><br><span class="line">               c[<span class="number">4</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led10</span>(<span class="params"></span>)                   //第二行</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">5</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);</span><br><span class="line">               c[<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line">               c[<span class="number">5</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led11</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">6</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">               c[<span class="number">6</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">               c[<span class="number">6</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led12</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">7</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>);</span><br><span class="line">               c[<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">               c[<span class="number">7</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led13</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">8</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line">               c[<span class="number">8</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line">               c[<span class="number">8</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led14</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">9</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</span><br><span class="line">               c[<span class="number">9</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">1</span>]=led[<span class="number">1</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));</span><br><span class="line">               c[<span class="number">9</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led20</span>(<span class="params"></span>)                   //第三行</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">10</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);</span><br><span class="line">               c[<span class="number">10</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line">               c[<span class="number">10</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led21</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">11</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">               c[<span class="number">11</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">               c[<span class="number">11</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led22</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">12</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>);</span><br><span class="line">               c[<span class="number">12</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">               c[<span class="number">12</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led23</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">13</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line">               c[<span class="number">13</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line">               c[<span class="number">13</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led24</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">14</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</span><br><span class="line">               c[<span class="number">14</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">2</span>]=led[<span class="number">2</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));</span><br><span class="line">               c[<span class="number">14</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led30</span>(<span class="params"></span>)                   //第四行</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">15</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);</span><br><span class="line">               c[<span class="number">15</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line">               c[<span class="number">15</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led31</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">16</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">               c[<span class="number">16</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">               c[<span class="number">16</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led32</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">17</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>);</span><br><span class="line">               c[<span class="number">17</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">               c[<span class="number">17</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led33</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">18</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line">               c[<span class="number">18</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line">               c[<span class="number">18</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led34</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">19</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</span><br><span class="line">               c[<span class="number">19</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">3</span>]=led[<span class="number">3</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));</span><br><span class="line">               c[<span class="number">19</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led40</span>(<span class="params"></span>)                   //第五行</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">20</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);</span><br><span class="line">               c[<span class="number">20</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">4</span>));</span><br><span class="line">               c[<span class="number">20</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led41</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">21</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line">               c[<span class="number">21</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">               c[<span class="number">21</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led42</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">22</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>);</span><br><span class="line">               c[<span class="number">22</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">               c[<span class="number">22</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led43</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">23</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">1</span>);</span><br><span class="line">               c[<span class="number">23</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">1</span>));</span><br><span class="line">               c[<span class="number">23</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">led44</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(c[<span class="number">24</span>]==<span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]|(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</span><br><span class="line">               c[<span class="number">24</span>]=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">               led[<span class="number">4</span>]=led[<span class="number">4</span>]&amp;(~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>));</span><br><span class="line">               c[<span class="number">24</span>]=<span class="number">0</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           randLED();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h4 id="相关现象"><a href="#相关现象" class="headerlink" title="相关现象"></a>相关现象</h4><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200624105820.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200624105820.png" alt="img"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本章任务&quot;&gt;&lt;a href=&quot;#本章任务&quot; class=&quot;headerlink&quot; title=&quot;本章任务&quot;&gt;&lt;/a&gt;本章任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用网页控制板子上的任意一盏灯&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;相关代码修改如下：&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>启用通知</title>
    <link href="https://lgx06.github.io/2020/09/15/%E5%90%AF%E7%94%A8%E9%80%9A%E7%9F%A5/"/>
    <id>https://lgx06.github.io/2020/09/15/%E5%90%AF%E7%94%A8%E9%80%9A%E7%9F%A5/</id>
    <published>2020-09-15T10:20:30.000Z</published>
    <updated>2020-09-20T10:10:44.069Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本章任务"><a href="#本章任务" class="headerlink" title="本章任务"></a>本章任务</h2><ul><li>在网页上显示加速度计得三轴值</li></ul><h4 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h4><blockquote><p>Micro:bit采用的是Freescale MMA8653FC 三轴加速度传感器，I2C接口与外部通信，10位ADC精度，可设置量程为±2g，±4g，±8g，数据最大更新速率为800Hz。</p><p>当Micro:bit处于静止或匀速运动状态时，加速计仅检测到重力加速度；将Micro:bit轻微甩动，加速计检测到甩动的加速度远小于重力加速度，可忽略不计，因此，在使用Micro:bit过程中，主要是检测当姿态变化时，重力加速度在x,y,z轴上的变化，并在此基础上应用。</p></blockquote><h4 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">   &lt;html&gt;</span><br><span class="line">   &lt;head&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span>    selected_device;    </span><br><span class="line">        <span class="keyword">var</span>    connected_server;    </span><br><span class="line">        <span class="keyword">var</span>    connected = <span class="literal">false</span>;    </span><br><span class="line">        <span class="keyword">var</span>    services_discovered = <span class="literal">false</span>;  <span class="comment">//在第5课上添加</span></span><br><span class="line">    <span class="keyword">var</span>    notifications_enabled = <span class="literal">false</span>; </span><br><span class="line">        <span class="comment">//在第5课上添加以下内容</span></span><br><span class="line">    <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">var</span> has_model_name_string = <span class="literal">false</span>; </span><br><span class="line"></span><br><span class="line">   <span class="comment">// service UUIDs </span></span><br><span class="line">   ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">   LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">   DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">   <span class="comment">// characteristic UUIDs </span></span><br><span class="line">   ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">   LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">   MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>; </span><br><span class="line">  </span><br><span class="line">   <span class="comment">// cached characteristics </span></span><br><span class="line">    <span class="keyword">var</span> led_matrix_state; </span><br><span class="line">    <span class="keyword">var</span> model_number_string;</span><br><span class="line">    <span class="keyword">var</span> accelerometer_data; </span><br><span class="line">    </span><br><span class="line">     <span class="comment">//</span></span><br><span class="line">     <span class="keyword">var</span> service_count;</span><br><span class="line">     <span class="keyword">var</span> services_discovered;</span><br><span class="line">     <span class="keyword">var</span> characteristics_discovered;  </span><br><span class="line">     <span class="keyword">var</span> characteristic_count ; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">discoverOrdisconnectDevices</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevicesOrDisconnect&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span> (!connected)</span><br><span class="line">            discoverDevices();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            selected_device.gatt.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">setNotificationsStatus</span>(<span class="params">status</span>) </span>&#123; </span><br><span class="line">notifications_enabled = status; </span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_notifications&#x27;</span>).innerHTML = status; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)           </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>);  </span><br><span class="line">         resetUI(); </span><br><span class="line">    &#125;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">onAccelerometerData</span>(<span class="params">event</span>) </span>&#123; </span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&quot;onAccelerometerData&quot;</span>);</span><br><span class="line"> buffer = event.target.value.buffer; </span><br><span class="line"> dataview = <span class="keyword">new</span> <span class="built_in">DataView</span>(buffer); </span><br><span class="line"> X = dataview.getUint16(<span class="number">0</span>, <span class="literal">true</span>); </span><br><span class="line"> Y = dataview.getUint16(<span class="number">2</span>, <span class="literal">true</span>); </span><br><span class="line"> Z = dataview.getUint16(<span class="number">4</span>, <span class="literal">true</span>);  </span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&quot;X=&quot;</span> + X + <span class="string">&quot;, Y=&quot;</span> + Y + <span class="string">&quot;, Z+&quot;</span> + Z);  <span class="built_in">document</span>.getElementById(<span class="string">&quot;accelerometer_data&quot;</span>).innerHTML = <span class="string">&quot;X=&quot;</span> + X + <span class="string">&quot;, Y=&quot;</span> + Y + <span class="string">&quot;, Z=&quot;</span> + Z; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);             </span><br><span class="line">        <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,</span><br><span class="line">            optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">        &#125;       </span><br><span class="line">        navigator.bluetooth.requestDevice(options)   </span><br><span class="line">        .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:&#x27;</span> + device.name);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:&#x27;</span>   + device.id);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:&#x27;</span> + device.gatt.connected);</span><br><span class="line">            selected_device = device;</span><br><span class="line">            <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">            connect();                              </span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            alert(<span class="string">&#x27;ERROR:&#x27;</span> +error);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR:&#x27;</span> + error);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)                             </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">        selected_device.gatt.connect()</span><br><span class="line">        .then(</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params">server</span>)        //表示连接成功</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Connected=&quot;</span> + server.connected);</span><br><span class="line">                selected_device.addEventListener( <span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);  <span class="comment">// 在第4课基础上添加的函数</span></span><br><span class="line">               </span><br><span class="line">                connected_server = server;</span><br><span class="line">                discoverSvcsAndChars();    <span class="comment">////在第5课基础上添加的函数</span></span><br><span class="line">                setConnectedStatus(<span class="literal">true</span>);   <span class="comment">// 在第3课基础上添加的函数,设置电脑蓝牙的当前连接状态</span></span><br><span class="line">               </span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params">error</span>)        //表示连接失败</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                setConnectedStatus(<span class="literal">false</span>);  <span class="comment">// 在第3课基础上添加的函数,设置电脑蓝牙的当前连接状态</span></span><br><span class="line">               </span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)  // 在第3课基础上添加的函数,设置电脑蓝牙的当前连接状态</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        connected = status;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML = status;</span><br><span class="line">        <span class="keyword">if</span> (status == <span class="literal">true</span>) </span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Disconnect&quot;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;   </span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Discover Devices&quot;</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setDiscoveryStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">     </span>&#123;  </span><br><span class="line">         services_discovered = status; </span><br><span class="line">         <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_discovered&#x27;</span>).innerHTML = status;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)      // 在第4课基础上添加的函数</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">        setDiscoveryStatus(<span class="literal">false</span>);    <span class="comment">// 在第5课基础上添加的函数</span></span><br><span class="line">setNotificationsStatus(<span class="literal">false</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //在第5课基础上添加的函数</span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">        connected_server.getPrimaryServices()<span class="comment">//调用函数去获取BBC上的相应的服务</span></span><br><span class="line">        .then(<span class="function"><span class="params">services</span> =&gt;</span> <span class="comment">//对服务进行判断</span></span><br><span class="line">        &#123;    </span><br><span class="line">                has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">                has_led_service = <span class="literal">false</span>;    </span><br><span class="line">                has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">    </span><br><span class="line">                services_discovered = <span class="number">0</span>;    </span><br><span class="line">                service_count = services.length;    <span class="comment">//发现BBC板服务的个数</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">    </span><br><span class="line">                services.forEach(<span class="function"><span class="params">service</span> =&gt;</span>  <span class="comment">//对已发现的所有服务进行判断</span></span><br><span class="line">                &#123;     </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                    &#125;     </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                    &#125;     </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                    &#125;     </span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                    service.getCharacteristics()  <span class="comment">//获取相应服务的所有特性</span></span><br><span class="line">                    .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                    &#123;      </span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                        services_discovered++;     <span class="comment">//发现一个就加一</span></span><br><span class="line">                        characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                        characteristic_count = characteristics.length;      <span class="comment">//特性的个数</span></span><br><span class="line">                        characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> <span class="comment">//对已发现的特性进行判断</span></span><br><span class="line">                        &#123;       </span><br><span class="line">                            characteristics_discovered++;       </span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                            &#123;        </span><br><span class="line">                                accelerometer_data = characteristic;        <span class="comment">//把发现的相应特性保存到相应变量中</span></span><br><span class="line">                                has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;       </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                led_matrix_state = characteristic;        </span><br><span class="line">                                has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;       </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                model_number_string = characteristic;        </span><br><span class="line">                                has_model_name_string = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;       </span><br><span class="line">                            <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                                setDiscoveryStatus(<span class="literal">true</span>);       </span><br><span class="line">                                <span class="comment">//setDiscoveryStatus(true);                  </span></span><br><span class="line">                            &#125;      </span><br><span class="line">                        &#125;);     </span><br><span class="line">                    &#125;);    </span><br><span class="line">                &#125;);  </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">randomLEDs</span>(<span class="params"></span>)//第六节课添加</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&quot;randomLEDs&quot;</span>);</span><br><span class="line">   <span class="comment">//state validation</span></span><br><span class="line">   <span class="keyword">if</span> (!connected)</span><br><span class="line">   &#123;</span><br><span class="line">   alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (!services_discovered)<span class="comment">//有没有发现所有服务</span></span><br><span class="line">   &#123;</span><br><span class="line">   alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (!has_led_service)</span><br><span class="line">   &#123;</span><br><span class="line">   alert(<span class="string">&quot;Error: The connected device does not contain the LED service&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (!has_led_matrix_state)<span class="comment">//led灯的特性有没有被发现的一个标记变量</span></span><br><span class="line">   &#123;</span><br><span class="line">   alert(<span class="string">&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">var</span> led_array = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//math.random():0~1  math.floor(x):返回小于等于x的最大整数</span></span><br><span class="line">   led_array[<span class="number">0</span>] = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">32</span>);</span><br><span class="line">   led_array[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">   led_array[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">   led_array[<span class="number">3</span>] = <span class="number">3</span>;</span><br><span class="line">   led_array[<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">var</span> led_matrix_data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(led_array);</span><br><span class="line">   </span><br><span class="line">   led_matrix_state.writeValue(led_matrix_data.buffer)<span class="comment">//控制板子上灯亮灭</span></span><br><span class="line">   .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;LED matrix state changed&#x27;</span>);</span><br><span class="line">   &#125;)</span><br><span class="line">       .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);</span><br><span class="line">   alert(<span class="string">&#x27;Error: &#x27;</span> +error);  <span class="keyword">return</span>;</span><br><span class="line">   &#125;);</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readModelNumber</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;readModelNumber&quot;</span>); </span><br><span class="line"><span class="comment">// state validation </span></span><br><span class="line"><span class="keyword">if</span> (!connected) &#123; </span><br><span class="line">alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!services_discovered) &#123; </span><br><span class="line">alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!has_device_information_service) &#123; </span><br><span class="line">alert(<span class="string">&quot;Error: The connected device does not contain the device information service&quot;</span>);    </span><br><span class="line"><span class="keyword">return</span>;  </span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">if</span> (!has_model_name_string) &#123;    </span><br><span class="line">alert(<span class="string">&quot;Error: The connected device does not contain the model name string characteristic&quot;</span>);  </span><br><span class="line"><span class="keyword">return</span>;  </span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line">model_number_string.readValue()  </span><br><span class="line">.then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;    </span><br><span class="line">   data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(value.buffer);  </span><br><span class="line">   model_number_string = <span class="keyword">new</span> TextDecoder(<span class="string">&quot;utf8&quot;</span>).decode(data);  </span><br><span class="line">   <span class="built_in">console</span>.log(model_number_string); </span><br><span class="line">   <span class="built_in">document</span>.getElementById(<span class="string">&quot;model_number&quot;</span>).innerHTML = model_number_string; </span><br><span class="line">&#125;)   </span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;    </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">alert(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line"><span class="keyword">return</span>;   </span><br><span class="line">&#125;);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toggleAccelerometerNotifications</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;toggleAccelerometerNotifications&quot;</span>); </span><br><span class="line"><span class="keyword">if</span> (!connected) &#123; </span><br><span class="line">alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);  </span><br><span class="line"><span class="keyword">return</span>;  </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> (!services_discovered) &#123; </span><br><span class="line">alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>); </span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (!has_accelerometer_service) &#123;  </span><br><span class="line">alert(<span class="string">&quot;Error: The connected device does not contain the accelerometer service&quot;</span>);  </span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span> (!has_accelerometer_data) &#123;  </span><br><span class="line">alert(<span class="string">&quot;Error: The connected device does not contain the accelerometer data characteristic&quot;</span>);   <span class="keyword">return</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!notifications_enabled) &#123;  </span><br><span class="line">accelerometer_data.startNotifications()</span><br><span class="line">.then(<span class="function"><span class="params">_</span> =&gt;</span> &#123; </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;accelerometer notifications started&#x27;</span>);  </span><br><span class="line">setNotificationsStatus(<span class="literal">true</span>); </span><br><span class="line">accelerometer_data.addEventListener(<span class="string">&#x27;characteristicvaluechanged&#x27;</span>, onAccelerometerData); </span><br><span class="line">&#125;)  </span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123; </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">alert(<span class="string">&#x27;Error: &#x27;</span> + error);  </span><br><span class="line"><span class="keyword">return</span>;  </span><br><span class="line">&#125;); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">accelerometer_data.stopNotifications()  </span><br><span class="line">.then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;  </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;accelerometer notificaions stopped&#x27;</span>); </span><br><span class="line">setNotificationsStatus(<span class="literal">false</span>); </span><br><span class="line">accelerometer_data.removeEventListener(<span class="string">&#x27;characteristicvaluechanged&#x27;</span>, onAccelerometerData); </span><br><span class="line">&#125;)   </span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;  </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Could not stop accelerometer_data notifications: &#x27;</span> + error);  </span><br><span class="line">&#125;); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt; Status&lt;/h2&gt;</span><br><span class="line">&lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">  &lt;tr&gt; &lt;!--表格的第一行 --&gt;</span><br><span class="line">    &lt;td&gt;<span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Connected<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;<span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Service Discovery Completed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Notifications<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt; &lt;!--表格的第二行 --&gt;</span><br><span class="line">    &lt;td id=<span class="string">&quot;status_connected&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">    &lt;td id=<span class="string">&quot;status_discovered&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">  &lt;td id=<span class="string">&quot;status_notifications&quot;</span>&gt;<span class="literal">false</span>&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;h2&gt; Device Discovery  Or Disconnect &lt;!-- 扫描/发现蓝牙设备 --&gt; </span><br><span class="line">&lt;/h2 &gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btn_scan&quot;</span> onclick=<span class="string">&quot;discoverOrdisconnectDevices()&quot;</span>&gt;Start scan&lt;/button&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;h2&gt;Reading and Writing&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;Write Characteristic - Randomise Lights&lt;/h3&gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btn_write&quot;</span> onclick=<span class="string">&quot;randomLEDs()&quot;</span>&gt;Randomise LEDs&lt;/button&gt;</span><br><span class="line">&lt;h3&gt;Read Characteristic - Model <span class="built_in">Number</span>&lt;/h3&gt; </span><br><span class="line">&lt;button id=<span class="string">&quot;btn_read&quot;</span> onclick=<span class="string">&quot;readModelNumber()&quot;</span>&gt;Read Model <span class="built_in">Number</span>&lt;/button&gt; </span><br><span class="line">&lt;div id=<span class="string">&quot;model_number&quot;</span>&gt;&lt;/div&gt; </span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;h2&gt;Notifications - Accelerometer X, Y, Z&lt;/h2&gt; </span><br><span class="line">&lt;button id=<span class="string">&quot;btn_notify&quot;</span> onclick=<span class="string">&quot;toggleAccelerometerNotifications()&quot;</span>&gt;Toggle Notifications&lt;<span class="regexp">/button&gt;  &lt;div id=&quot;accelerometer_data&quot;&gt;&lt;/</span>div&gt; </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="观察现象"><a href="#观察现象" class="headerlink" title="观察现象"></a>观察现象</h4><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200622214218.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200622214218.png" alt="img"></a></p><p>图上的状态差不多是板子在水平状态下的值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本章任务&quot;&gt;&lt;a href=&quot;#本章任务&quot; class=&quot;headerlink&quot; title=&quot;本章任务&quot;&gt;&lt;/a&gt;本章任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在网页上显示加速度计得三轴值&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;了解&quot;&gt;&lt;a href=&quot;#了解&quot; clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>添加服务特性</title>
    <link href="https://lgx06.github.io/2020/09/15/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E6%9C%8D%E5%8A%A1%E7%89%B9%E6%80%A7/"/>
    <id>https://lgx06.github.io/2020/09/15/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E6%9C%8D%E5%8A%A1%E7%89%B9%E6%80%A7/</id>
    <published>2020-09-15T10:20:23.000Z</published>
    <updated>2020-09-20T10:10:44.174Z</updated>
    
    <content type="html"><![CDATA[<h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            <span class="keyword">var</span> selected_device;           <span class="comment">// 保存用户选择的蓝牙设备</span></span><br><span class="line">            <span class="keyword">var</span> connected_server;           <span class="comment">//在第二课基础上添加的变量，保存用户连接的蓝牙设备</span></span><br><span class="line">            <span class="keyword">var</span> connected=<span class="literal">false</span>;            <span class="comment">//在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span></span><br><span class="line">            <span class="keyword">var</span> services_discovered =<span class="literal">false</span>; <span class="comment">//在第五节课上添加</span></span><br><span class="line">            <span class="comment">//在第5课上添加以下内容</span></span><br><span class="line">            <span class="comment">// presence of services and characteristics </span></span><br><span class="line">            <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; </span><br><span class="line">            <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">            <span class="keyword">var</span> has_model_number_string = <span class="literal">false</span>; </span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> has_temperature_service = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> has_temperature = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">            <span class="comment">// service UUIDs </span></span><br><span class="line">            ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">            LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">            DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">            TEMPERATURE_SERVICE = <span class="string">&#x27;e95d6100-251d-470a-a062-fa1922dfa9a8&#x27;</span>;</span><br><span class="line">            <span class="comment">// characteristic UUIDs </span></span><br><span class="line">            ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">            LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">            MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>; </span><br><span class="line">            TEMPERATURE=<span class="string">&#x27;e95d9250-251d-470a-a062-fa1922dfa9a8&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">            <span class="comment">// cached characteristics var accelerometer_data; </span></span><br><span class="line">            <span class="keyword">var</span> accelerometer_data;</span><br><span class="line">            <span class="keyword">var</span> led_matrix_state; </span><br><span class="line">            <span class="keyword">var</span> model_number_string;</span><br><span class="line">            <span class="keyword">var</span> temperature;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">var</span> service_count;</span><br><span class="line">            <span class="keyword">var</span> services_discovered;</span><br><span class="line">            <span class="keyword">var</span> characteristics_discovered;  </span><br><span class="line">            <span class="keyword">var</span> characteristic_count ; </span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">discoverDevicesOrDisconnect</span>(<span class="params"></span>)          //在第四课基础上添加的函数</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevicesOrDisconnect&quot;</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;。。。&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span>(!connected)</span><br><span class="line">                    discoverDevices();</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    selected_device.gatt.disconnect();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)                   //在第四课基础上添加的函数</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>)</span><br><span class="line">                resetUI();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);     <span class="comment">//consol.log 控制台打印输出</span></span><br><span class="line">                <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,           </span><br><span class="line">                optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE,TEMPERATURE_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">                              &#125;        <span class="comment">//发现所有周边蓝牙设备</span></span><br><span class="line">                navigator.bluetooth.requestDevice(options)      <span class="comment">//Navigator对象，包含有关游览器的信息</span></span><br><span class="line">                .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:        &#x27;</span> + device.name);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:          &#x27;</span> + device.id);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:   &#x27;</span> + device.gatt.connected);</span><br><span class="line">                    selected_device = device;</span><br><span class="line">                    <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">                    connect();                              <span class="comment">//在第二课基础上添加的函数</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .catch(<span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">                    alert(<span class="string">&#x27;ERROR:&#x27;</span> +error);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR:&#x27;</span> +error);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">                selected_device.gatt.connect()</span><br><span class="line">                .then(</span><br><span class="line">                    <span class="function"><span class="keyword">function</span>(<span class="params">server</span>)                            //表示连接成功</span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&quot;Connected=&quot;</span> + server.connected);</span><br><span class="line">                        selected_device.addEventListener(<span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);</span><br><span class="line"></span><br><span class="line">                        connected_server = server;</span><br><span class="line">                        discoverSvcsAndChars();</span><br><span class="line">                        setConnectedStatus(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)                              //表示连接失败</span></span><br><span class="line"><span class="function">                    </span>&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                        alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                        setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                connected=status;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML=status;</span><br><span class="line">                <span class="keyword">if</span>(status==<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML=<span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML=<span class="string">&quot;Discover Devices&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">setDiscoveryStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                services_discovered = status;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_discovered&#x27;</span>).innerHTML = status;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">                setDiscoveryStatus(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //在第5课基础上添加的函数</span></span><br><span class="line"><span class="function">            </span>&#123;  </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">                connected_server.getPrimaryServices()</span><br><span class="line">                .then(<span class="function"><span class="params">services</span> =&gt;</span> </span><br><span class="line">                &#123;    </span><br><span class="line">                        has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">                        has_led_service = <span class="literal">false</span>;    </span><br><span class="line">                        has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">                        has_temperature_service = <span class="literal">false</span>;</span><br><span class="line">            </span><br><span class="line">                        services_discovered = <span class="number">0</span>;    </span><br><span class="line">                        service_count = services.length;    </span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">            </span><br><span class="line">                        services.forEach(<span class="function"><span class="params">service</span> =&gt;</span> </span><br><span class="line">                        &#123;     </span><br><span class="line">                            <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                            &#123;      </span><br><span class="line">                                has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                            &#125;     </span><br><span class="line">                            <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                            &#123;      </span><br><span class="line">                                has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                            &#125;     </span><br><span class="line">                            <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                            &#123;      </span><br><span class="line">                                has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (service.uuid == TEMPERATURE_SERVICE) </span><br><span class="line">                            &#123;      </span><br><span class="line">                                has_temperature_service = <span class="literal">true</span>;     </span><br><span class="line">                            &#125;     </span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                            service.getCharacteristics()</span><br><span class="line">                            .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                            &#123;      </span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                                services_discovered++;     </span><br><span class="line">                                characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                                characteristic_count = characteristics.length;      </span><br><span class="line">                                characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> </span><br><span class="line">                                &#123;       </span><br><span class="line">                                    characteristics_discovered++;       </span><br><span class="line">                                    <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                                    <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                                    &#123;        </span><br><span class="line">                                        accelerometer_data = characteristic;        </span><br><span class="line">                                        has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                                    &#125;       </span><br><span class="line">                                    <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                                    &#123;        </span><br><span class="line">                                        led_matrix_state = characteristic;        </span><br><span class="line">                                        has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                                    &#125;       </span><br><span class="line">                                    <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                                    &#123;        </span><br><span class="line">                                        model_number_string = characteristic;        </span><br><span class="line">                                        has_model_number_string = <span class="literal">true</span>;       </span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (characteristic.uuid == TEMPERATURE) </span><br><span class="line">                                    &#123;        </span><br><span class="line">                                        temperature = characteristic;        </span><br><span class="line">                                        has_temperature = <span class="literal">true</span>;       </span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                                    &#123;        </span><br><span class="line">                                        <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                                        setDiscoveryStatus(<span class="literal">true</span>);       </span><br><span class="line">                                      <span class="comment">//  setDiscoveryStatus(true);                  </span></span><br><span class="line">                                    &#125;      </span><br><span class="line">                                &#125;);     </span><br><span class="line">                            &#125;);    </span><br><span class="line">                        &#125;);  </span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">randomLEDs</span>(<span class="params"></span>)   //第6课上添加</span></span><br><span class="line"><span class="function">            </span>&#123;  </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;randomLEDs&quot;</span>);   </span><br><span class="line">                <span class="comment">// state validation   </span></span><br><span class="line">                <span class="keyword">if</span> (!connected) </span><br><span class="line">                &#123;     </span><br><span class="line">                    alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">                    <span class="keyword">return</span>;   </span><br><span class="line">                &#125;   </span><br><span class="line">                <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">                &#123;     </span><br><span class="line">                    alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">                    <span class="keyword">return</span>;  </span><br><span class="line">                &#125;   </span><br><span class="line">                <span class="keyword">if</span> (!has_led_service) </span><br><span class="line">                &#123;     </span><br><span class="line">                    alert(<span class="string">&quot;Error: The connected device does not contain the LED service&quot;</span>);     </span><br><span class="line">                    <span class="keyword">return</span>;  </span><br><span class="line">                &#125;   </span><br><span class="line">                <span class="keyword">if</span> (!has_led_matrix_state) </span><br><span class="line">                &#123;      </span><br><span class="line">                    alert(<span class="string">&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;</span>);      </span><br><span class="line">                    <span class="keyword">return</span>;   </span><br><span class="line">                &#125;   </span><br><span class="line">                <span class="keyword">var</span> led_array = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>];   </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">var</span> led_array2 =[[<span class="number">12</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">12</span>],[<span class="number">4</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">14</span>],[<span class="number">4</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">14</span>],[<span class="number">0</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">4</span>],[<span class="number">10</span>,<span class="number">21</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">4</span>]];</span><br><span class="line">                <span class="comment">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span></span><br><span class="line">                </span><br><span class="line">                    </span><br><span class="line">                    led_array=led_array2[i%<span class="number">5</span>];</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="comment">/*led_array[0] = led_array2[i][1];</span></span><br><span class="line"><span class="comment">                    led_array[1] = led_array2[i][1];</span></span><br><span class="line"><span class="comment">                    led_array[2] = led_array2[i][2];</span></span><br><span class="line"><span class="comment">                    led_array[3] = led_array2[i][3];</span></span><br><span class="line"><span class="comment">                    led_array[4] = led_array2[i][4];*/</span></span><br><span class="line">                </span><br><span class="line">               <span class="comment">/* led_array[0] = 10;//Math.floor(Math.random() * 32);  </span></span><br><span class="line"><span class="comment">                led_array[1] = 21;   </span></span><br><span class="line"><span class="comment">                led_array[2] = 17;   </span></span><br><span class="line"><span class="comment">                led_array[3] = 10;   </span></span><br><span class="line"><span class="comment">                led_array[4] = 4; */</span></span><br><span class="line">    </span><br><span class="line">                <span class="keyword">var</span> led_matrix_data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(led_array); </span><br><span class="line"></span><br><span class="line">                led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class="line">                .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;   </span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;LED matrix state changed&#x27;</span>);  </span><br><span class="line">                    &#125;)  </span><br><span class="line">                .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;   </span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">                    alert(<span class="string">&#x27;Error: &#x27;</span> + error);   <span class="keyword">return</span>;  </span><br><span class="line">                    &#125;); </span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;Web Bluetooth&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">            Status  &lt;!-- 显示蓝牙状态--&gt;</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">        &lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;    <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Connected<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>    &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;    <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Service Discovery Completed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>    &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_connected&quot;</span>&gt;False&lt;/td&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_discovered&quot;</span>&gt;False&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;Device Discovery Or Disconnect&lt;<span class="regexp">/h2&gt;     &lt;!-- 扫描/</span>发现蓝牙设备 --&gt;</span><br><span class="line">        &lt;button id=<span class="string">&quot;btn_scan&quot;</span> onclick=<span class="string">&quot;discoverDevicesOrDisconnect()&quot;</span>&gt;</span><br><span class="line">            Discover Devices</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;Reading and Writing&lt;/h2&gt;</span><br><span class="line">        &lt;h3&gt;Write Characteristic - Randomise Lights&lt;/h3&gt;  </span><br><span class="line">        &lt;button id=<span class="string">&quot;btn_write&quot;</span> onclick=<span class="string">&quot;randomLEDs()&quot;</span>&gt;Randomise LEDs&lt;/button&gt; </span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这时打开网页蓝牙应显示以下效果</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619172654.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619172654.png" alt="img"></a></p><p>右边可以看到相关服务及特性。</p><h3 id="温度服务"><a href="#温度服务" class="headerlink" title="温度服务"></a>温度服务</h3><p>由于BBC板里没有温度服务，需要我们去官网下载。</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619173208.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200619173208.png" alt="img"></a></p><p>添加相关程序</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span>    selected_device;</span><br><span class="line">        <span class="keyword">var</span>    connected_server;</span><br><span class="line">        <span class="keyword">var</span>    connected=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span>    services_discovered=<span class="literal">false</span>;</span><br><span class="line">         <span class="comment">//在第5课上添加以下内容</span></span><br><span class="line">        <span class="comment">// presence of services and characteristics </span></span><br><span class="line">        <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">var</span> has_model_name_string = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">var</span> has_temperature_service =<span class="literal">false</span>;    <span class="comment">//温度</span></span><br><span class="line">        <span class="keyword">var</span> has_tem_temperature = <span class="literal">false</span>;  </span><br><span class="line">         <span class="comment">// service UUIDs </span></span><br><span class="line">       ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">       TEMPERATURE_SERVICE = <span class="string">&#x27;e95d6100-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       <span class="comment">// characteristic UUIDs </span></span><br><span class="line">       ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">       TEM_TEMPERATURE = <span class="string">&#x27;e95d1b25-251d-470a-a062-fa1922dfa9a8&#x27;</span>;  </span><br><span class="line">       <span class="comment">// cached characteristics var accelerometer_data; </span></span><br><span class="line">       <span class="keyword">var</span> led_matrix_state; </span><br><span class="line">        <span class="keyword">var</span> model_number_string;</span><br><span class="line">        <span class="keyword">var</span> accelerometer_data;</span><br><span class="line">        <span class="keyword">var</span> tem_temperature;    </span><br><span class="line">          <span class="comment">//</span></span><br><span class="line">        <span class="keyword">var</span> service_count;</span><br><span class="line">         <span class="keyword">var</span> services_discovered;</span><br><span class="line">         <span class="keyword">var</span> characteristics_discovered;  </span><br><span class="line">         <span class="keyword">var</span> characteristic_count ;               </span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">discoverOrdisconnectDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;discoverOrdisconnectDevices&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!connected)</span><br><span class="line">            discoverDevices();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                selected_device.gatt.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>);</span><br><span class="line">            resetUI();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//function input.temperature(): number;</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123; </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,</span><br><span class="line">                optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE,TEMPERATURE_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">            &#125;        <span class="comment">//发现所有周边蓝牙设备</span></span><br><span class="line">           </span><br><span class="line">            navigator.bluetooth.requestDevice(options)</span><br><span class="line">            .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:&#x27;</span> + device.name);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:&#x27;</span> + device.id);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:&#x27;</span> + device.gatt.connected);</span><br><span class="line">                selected_device = device;</span><br><span class="line">                <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">                connect();</span><br><span class="line">                &#125;)</span><br><span class="line">            .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                alert(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">                &#125;);       </span><br><span class="line">        &#125;       </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">            selected_device.gatt.connect()</span><br><span class="line">            .then(</span><br><span class="line">                <span class="function"><span class="keyword">function</span> (<span class="params">server</span>)</span></span><br><span class="line"><span class="function">                </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;Connected &quot;</span> + server.connected);</span><br><span class="line">                    selected_device.addEventListener(<span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);</span><br><span class="line">                    connected_server =server;</span><br><span class="line">                    discoverSvcsAndChars(); <span class="comment">//在第5课基础上添加的函数</span></span><br><span class="line">                    setConnectedStatus(<span class="literal">true</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="function"><span class="keyword">function</span> (<span class="params">error</span>)</span></span><br><span class="line"><span class="function">                </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                   alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                   setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            connected=status;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML = status;</span><br><span class="line">            <span class="keyword">if</span>(status==<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Discover Devices&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">setDiscoveryStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            services_discovered=status;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_discovered&#x27;</span>).innerHTML=status;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //在第5课基础上添加的函数</span></span><br><span class="line"><span class="function">        </span>&#123;  </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">            connected_server.getPrimaryServices()</span><br><span class="line">            .then(<span class="function"><span class="params">services</span> =&gt;</span> </span><br><span class="line">            &#123;    </span><br><span class="line">                    has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">                    has_led_service = <span class="literal">false</span>;    </span><br><span class="line">                    has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">                    has_temperature_service= <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    services_discovered = <span class="number">0</span>;    </span><br><span class="line">                    service_count = services.length;    </span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">        </span><br><span class="line">                    services.forEach(<span class="function"><span class="params">service</span> =&gt;</span> </span><br><span class="line">                    &#123;     </span><br><span class="line">                        <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                        &#125;   </span><br><span class="line">                        <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                        &#125;     </span><br><span class="line">                       <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                        &#125; </span><br><span class="line">                        <span class="keyword">if</span> (service.uuid == TEMPERATURE_SERVICE) <span class="comment">//温度</span></span><br><span class="line">                        &#123;      </span><br><span class="line">                            has_temperature_service = <span class="literal">true</span>;     </span><br><span class="line">                        &#125;        </span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                        service.getCharacteristics()</span><br><span class="line">                        .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                        &#123;      </span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                            services_discovered++;     </span><br><span class="line">                            characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                            characteristic_count = characteristics.length;      </span><br><span class="line">                            characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> </span><br><span class="line">                            &#123;       </span><br><span class="line">                                characteristics_discovered++;       </span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                                <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                                &#123;        </span><br><span class="line">                                    accelerometer_data = characteristic;        </span><br><span class="line">                                    has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                                &#125;      </span><br><span class="line">                                <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    led_matrix_state = characteristic;        </span><br><span class="line">                                    has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                                &#125;       </span><br><span class="line">                                <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    model_number_string = characteristic;        </span><br><span class="line">                                    has_model_name_string = <span class="literal">true</span>;       </span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span>(characteristic.uuid == TEM_TEMPERATURE)  <span class="comment">//温度</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                    tem_temperature = characteristic; </span><br><span class="line">                                    has_tem_temperature = <span class="literal">true</span>;</span><br><span class="line">                                &#125;     </span><br><span class="line">                                <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                                &#123;        </span><br><span class="line">                                    <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                                    setDiscoveryStatus(<span class="literal">true</span>);       </span><br><span class="line">                                    <span class="comment">//setDiscoveryStatus(true);                  </span></span><br><span class="line">                                &#125;    </span><br><span class="line">                            &#125;);     </span><br><span class="line">                        &#125;);    </span><br><span class="line">                    &#125;);  </span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">randomLEDs</span>(<span class="params"></span>)   //第6课上添加</span></span><br><span class="line"><span class="function">        </span>&#123;  </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;randomLEDs&quot;</span>);   </span><br><span class="line">            <span class="comment">// state validation   </span></span><br><span class="line">            <span class="keyword">if</span> (!connected) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;  </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">if</span> (!has_led_service) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: The connected device does not contain the LED service&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;  </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">if</span> (!has_led_matrix_state) </span><br><span class="line">            &#123;      </span><br><span class="line">                alert(<span class="string">&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;</span>);      </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">var</span> led_array = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>];   </span><br><span class="line"></span><br><span class="line">             <span class="comment">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span></span><br><span class="line">            led_array[<span class="number">0</span>] =<span class="number">10</span>;  </span><br><span class="line">            led_array[<span class="number">1</span>] = <span class="number">31</span>;   </span><br><span class="line">            led_array[<span class="number">2</span>] = <span class="number">31</span>;   </span><br><span class="line">            led_array[<span class="number">3</span>] = <span class="number">14</span>;   </span><br><span class="line">            led_array[<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line">            <span class="comment">/*led_array[0] = 31;  </span></span><br><span class="line"><span class="comment">            led_array[1] = 17;   </span></span><br><span class="line"><span class="comment">            led_array[2] = 17;   </span></span><br><span class="line"><span class="comment">            led_array[3] = 17;   </span></span><br><span class="line"><span class="comment">            led_array[4] = 31; */</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">var</span> led_matrix_data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(led_array); </span><br><span class="line"></span><br><span class="line">            led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class="line">            .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;   </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;LED matrix state changed&#x27;</span>);  </span><br><span class="line">                &#125;)  </span><br><span class="line">            .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;   </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">                alert(<span class="string">&#x27;Error: &#x27;</span> + error);   <span class="keyword">return</span>;  </span><br><span class="line">                &#125;); </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">readModelNumber</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">        </span>&#123;  </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;readModelNumber&quot;</span>);   </span><br><span class="line">            <span class="comment">// state validation   </span></span><br><span class="line">            <span class="keyword">if</span> (!connected) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">if</span> (!has_device_information_service) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: The connected device does not contain the device information service&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;   </span><br><span class="line">            <span class="keyword">if</span> (!has_model_name_string) </span><br><span class="line">            &#123;     </span><br><span class="line">                alert(<span class="string">&quot;Error: The connected device does not contain the model name string characteristic&quot;</span>);     </span><br><span class="line">                <span class="keyword">return</span>;   </span><br><span class="line">            &#125;   </span><br><span class="line">            </span><br><span class="line">            model_number_string.readValue()  </span><br><span class="line">            .then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;   </span><br><span class="line">                data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(value.buffer);   </span><br><span class="line">                model_number_string = <span class="keyword">new</span> TextDecoder(<span class="string">&quot;utf-8&quot;</span>).decode(data);  </span><br><span class="line">                <span class="built_in">console</span>.log(model_number_string);   </span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;model_number&quot;</span>).innerHTML = model_number_string;  </span><br><span class="line">                &#125;)  </span><br><span class="line">            .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;  </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">                alert(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">                <span class="keyword">return</span>;  </span><br><span class="line">                &#125;); </span><br><span class="line">            &#125;     </span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h2&gt;  Status</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">            &lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Connected<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Service Discovery Completed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td id=<span class="string">&quot;status_connected&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">                    &lt;td id=<span class="string">&quot;status_discovered&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/table&gt;</span><br><span class="line">            &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;</span><br><span class="line">            Device Discovery or Disconnect</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">        &lt;button id = <span class="string">&quot;btn_scan&quot;</span> onclick=<span class="string">&quot;discoverOrdisconnectDevices()&quot;</span>&gt;Start scan&lt;/button&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;h2&gt;Reading and Writing&lt;/h2&gt;</span><br><span class="line">        &lt;h3&gt;Write Characteristic - Randomise Lights&lt;/h3&gt;  </span><br><span class="line">        &lt;button id=<span class="string">&quot;btn_write&quot;</span> onclick=<span class="string">&quot;randomLEDs()&quot;</span>&gt;Randomise LEDs&lt;/button&gt;</span><br><span class="line">        &lt;h3&gt;Read Characteristic - Model number&lt;/h3&gt;  </span><br><span class="line">        &lt;button id=<span class="string">&quot;btn_read&quot;</span> onclick=<span class="string">&quot;readModelNumber()&quot;</span>&gt;Read Model number&lt;/button&gt; </span><br><span class="line">        &lt;div id=<span class="string">&quot;model_number&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>网页蓝牙就可以成功显示温度相关服务和特性了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;相关代码&quot;&gt;&lt;a href=&quot;#相关代码&quot; class=&quot;headerlink&quot; title=&quot;相关代码&quot;&gt;&lt;/a&gt;相关代码&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网页如何显示连接蓝牙设备</title>
    <link href="https://lgx06.github.io/2020/09/15/%E7%BD%91%E9%A1%B5%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E8%AE%BE%E5%A4%87/"/>
    <id>https://lgx06.github.io/2020/09/15/%E7%BD%91%E9%A1%B5%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99%E8%AE%BE%E5%A4%87/</id>
    <published>2020-09-15T10:20:17.000Z</published>
    <updated>2020-09-20T10:10:44.525Z</updated>
    
    <content type="html"><![CDATA[<h4 id="首先，让我们先了解下今天要学习的东西。"><a href="#首先，让我们先了解下今天要学习的东西。" class="headerlink" title="首先，让我们先了解下今天要学习的东西。"></a>首先，让我们先了解下今天要学习的东西。</h4><blockquote><p>网页蓝牙：通过渐进式 Web 应用（Progressive Web Apps）技术，你可以开发成熟的 Web 应用。 得益于大量新规范和新功能，以前需要在本机执行的应用，现在可以基于 Web 实现。 不过迄今为止，与硬件设备的交互仍然是遥不可及。 过去几年在浏览器中实现的新规范和功能的数量都是惊人的，我们已经有了处理3D的规范，例如WebGL和即将推出的WebGPU，我们可以流式传输和生成音频，观看视频并将网络摄像头用作输入设备，其实我们还可以使用WebAssembly以几乎原生的速度运行代码。</p><p>长期以来我们一直试图解决的一个问题：网络非常适合与服务器通信，但不适合与设备通信。</p></blockquote><hr><blockquote><p>Micro:bit是由英国BBC公司推出的面向青少年编程教育的微型计算机，这一块小板子上集成了加速度传感器，磁力传感器，两个可编程按钮，25个单色led，蓝牙等常用传感器设备，采用micro usb口供电，可外接电池盒，在底部还有多个环孔连接器，可用于控制外接设备。</p><p>别看它面积小，但功能都很齐全哦</p></blockquote><h2 id="一、开始的准备工作"><a href="#一、开始的准备工作" class="headerlink" title="一、开始的准备工作"></a>一、开始的准备工作</h2><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611164658.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611164658.png" alt="img"></a></p><h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><ol><li><p>先将板子通过USB口接到电脑上。</p></li><li><p>到官网下载测试程序。</p><p><a href="https://makecode.microbit.org/v0/89975-20684-84568-20127">https://makecode.microbit.org/v0/89975-20684-84568-20127</a></p><p>下好程序后，将程序拖入到板子的盘里。这时候，程序会消失，不用担心，这是正常现象，板子上会滚动显示 “Hi !”这表明连接本机成功。</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611163637.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611163637.png" alt="img"></a></p></li></ol><h2 id="三、用程序实现蓝牙控制板子的断和连"><a href="#三、用程序实现蓝牙控制板子的断和连" class="headerlink" title="三、用程序实现蓝牙控制板子的断和连"></a>三、用程序实现蓝牙控制板子的断和连</h2><ul><li>相关程序，这里面有用到后面几节课的读写功能。</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">      <span class="keyword">var</span> selected_device;           <span class="comment">// 保存用户选择的蓝牙设备</span></span><br><span class="line">      <span class="keyword">var</span> connected_server;           <span class="comment">//在第二课基础上添加的变量，保存用户连接的蓝牙设备</span></span><br><span class="line">      <span class="keyword">var</span> connected=<span class="literal">false</span>;            <span class="comment">//在第三课基础上添加的变量，保存电脑蓝牙的当前连接设备</span></span><br><span class="line"><span class="comment">//在第5课上添加以下内容</span></span><br><span class="line">  <span class="comment">// presence of services and characteristics </span></span><br><span class="line">  <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; </span><br><span class="line">  <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>; </span><br><span class="line">  <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>; </span><br><span class="line">  <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">  <span class="keyword">var</span> has_model_name_string = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  <span class="comment">// service UUIDs </span></span><br><span class="line">  ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">  LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">  DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">  <span class="comment">// characteristic UUIDs </span></span><br><span class="line">  ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">  LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">  MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>; </span><br><span class="line"> </span><br><span class="line">  <span class="comment">// cached characteristics var accelerometer_data; </span></span><br><span class="line">   <span class="keyword">var</span> led_matrix_state; </span><br><span class="line">   <span class="keyword">var</span> model_number_string;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">var</span> service_count;</span><br><span class="line">    <span class="keyword">var</span> services_discovered;</span><br><span class="line">    <span class="keyword">var</span> characteristics_discovered;  </span><br><span class="line">    <span class="keyword">var</span> characteristic_count ; </span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">discoverOrdisconnectDevices</span>(<span class="params"></span>)          //在第四课基础上添加的函数</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevicesOrDisconnect&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span>(!connected)</span><br><span class="line">               discoverDevices();</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               selected_device.gatt.disconnext();</span><br><span class="line">           &#125;</span><br><span class="line">  </span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)                   //在第四课基础上添加的函数</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>)</span><br><span class="line">           resetUI();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,</span><br><span class="line">           optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">             &#125;  <span class="comment">//发现所有周边蓝牙设备</span></span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);</span><br><span class="line">         <span class="comment">//  var options = &#123;acceptAllDevices:true&#125;           //发现所有周边蓝牙设备</span></span><br><span class="line">           navigator.bluetooth.requestDevice(options)</span><br><span class="line">           .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:        &#x27;</span> + device.name);</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:          &#x27;</span> + device.id);</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:   &#x27;</span> + device.gatt.connected);</span><br><span class="line">               selected_device = device;</span><br><span class="line">               <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">               connect();</span><br><span class="line">           &#125;)</span><br><span class="line">           .catch(<span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">               alert(<span class="string">&#x27;ERROR:&#x27;</span> +error);</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR:&#x27;</span> +error);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">           selected_device.gatt.connect()</span><br><span class="line">           .then(</span><br><span class="line">               <span class="function"><span class="keyword">function</span>(<span class="params">server</span>)                            //表示连接成功</span></span><br><span class="line"><span class="function">               </span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&quot;Connected=&quot;</span> + server.connected);</span><br><span class="line">                   selected_device.addEventListener(<span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);</span><br><span class="line">  </span><br><span class="line">                   connected_server = server;</span><br><span class="line">discoverSvcsAndChars();</span><br><span class="line">                   setConnectedStatus(<span class="literal">true</span>);</span><br><span class="line">  </span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)                              //表示连接失败</span></span><br><span class="line"><span class="function">               </span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                   alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">                   setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">  </span><br><span class="line">               &#125;</span><br><span class="line">           );</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           connected=status;</span><br><span class="line">           <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML=status;</span><br><span class="line">           <span class="keyword">if</span>(status==<span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML=<span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML=<span class="string">&quot;Discover Devices&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //在第5课基础上添加的函数</span></span><br><span class="line"><span class="function">   </span>&#123;  </span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">       connected_server.getPrimaryServices()</span><br><span class="line">       .then(<span class="function"><span class="params">services</span> =&gt;</span> </span><br><span class="line">       &#123;    </span><br><span class="line">               has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">               has_led_service = <span class="literal">false</span>;    </span><br><span class="line">               has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">   </span><br><span class="line">               services_discovered = <span class="number">0</span>;    </span><br><span class="line">               service_count = services.length;    </span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">   </span><br><span class="line">               services.forEach(<span class="function"><span class="params">service</span> =&gt;</span> </span><br><span class="line">               &#123;     </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                   &#125;     </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                   &#125;     </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                   &#125;     </span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                   service.getCharacteristics()</span><br><span class="line">                   .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                   &#123;      </span><br><span class="line">                       <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                       services_discovered++;     </span><br><span class="line">                       characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                       characteristic_count = characteristics.length;      </span><br><span class="line">                       characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> </span><br><span class="line">                       &#123;       </span><br><span class="line">                           characteristics_discovered++;       </span><br><span class="line">                           <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                           &#123;        </span><br><span class="line">                               accelerometer_data = characteristic;        </span><br><span class="line">                               has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;       </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               led_matrix_state = characteristic;        </span><br><span class="line">                               has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;       </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               model_number_string = characteristic;        </span><br><span class="line">                               has_model_name_string = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;       </span><br><span class="line">                           <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                              <span class="comment">// setDiscoveryStatus(true);       </span></span><br><span class="line">                               <span class="comment">//setDiscoveryStatus(true);                  </span></span><br><span class="line">                           &#125;      </span><br><span class="line">                       &#125;);     </span><br><span class="line">                   &#125;);    </span><br><span class="line">               &#125;);  </span><br><span class="line">       &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611165124.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611165124.png" alt="img"></a></p><ul><li><p>测试</p><p>打开测试网址，有以下效果即成功。</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611162316.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200611162316.png" alt="img"></a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;首先，让我们先了解下今天要学习的东西。&quot;&gt;&lt;a href=&quot;#首先，让我们先了解下今天要学习的东西。&quot; class=&quot;headerlink&quot; title=&quot;首先，让我们先了解下今天要学习的东西。&quot;&gt;&lt;/a&gt;首先，让我们先了解下今天要学习的东西。&lt;/h4&gt;&lt;bloc</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网页控制行列</title>
    <link href="https://lgx06.github.io/2020/09/15/%E7%BD%91%E9%A1%B5%E6%8E%A7%E5%88%B6%E8%A1%8C%E5%88%97/"/>
    <id>https://lgx06.github.io/2020/09/15/%E7%BD%91%E9%A1%B5%E6%8E%A7%E5%88%B6%E8%A1%8C%E5%88%97/</id>
    <published>2020-09-15T10:20:07.000Z</published>
    <updated>2020-09-20T10:10:44.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本章任务"><a href="#本章任务" class="headerlink" title="本章任务"></a>本章任务</h2><ul><li>用网页控制矩阵上的行和列</li></ul><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span>    selected_device; <span class="comment">//选择设备</span></span><br><span class="line">        <span class="keyword">var</span>    connected_server; <span class="comment">//连接设备</span></span><br><span class="line">        <span class="keyword">var</span>    connected=<span class="literal">false</span>;<span class="comment">//连接状态</span></span><br><span class="line">        <span class="keyword">var</span>    services_discovered=<span class="literal">false</span>;<span class="comment">//发现设备状态</span></span><br><span class="line">        <span class="comment">// 添加服务和特性状态变量 </span></span><br><span class="line">        <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; <span class="comment">//加速度服务状态</span></span><br><span class="line">        <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>; <span class="comment">//加速度特性状态</span></span><br><span class="line">        <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;<span class="comment">//led服务状态</span></span><br><span class="line">        <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>; <span class="comment">//led控制特性状态</span></span><br><span class="line">        <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; <span class="comment">//设备信息服务状态</span></span><br><span class="line">        <span class="keyword">var</span> has_model_name_string = <span class="literal">false</span>; <span class="comment">//设备信息特性状态</span></span><br><span class="line">        <span class="keyword">var</span> has_temperature_service =<span class="literal">false</span>;    <span class="comment">//温度服务状态</span></span><br><span class="line">        <span class="keyword">var</span> has_tem_temperature = <span class="literal">false</span>;  <span class="comment">//温度特性状态</span></span><br><span class="line">         <span class="comment">// 服务 UUIDs </span></span><br><span class="line">       ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">       TEMPERATURE_SERVICE = <span class="string">&#x27;e95d6100-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       <span class="comment">// 特性 UUIDs </span></span><br><span class="line">       ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span><br><span class="line">       MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>;</span><br><span class="line">       TEM_TEMPERATURE = <span class="string">&#x27;e95d1b25-251d-470a-a062-fa1922dfa9a8&#x27;</span>;  </span><br><span class="line">       <span class="comment">// 添加特性变量 </span></span><br><span class="line">       <span class="keyword">var</span> led_matrix_state; </span><br><span class="line">        <span class="keyword">var</span> model_number_string;</span><br><span class="line">        <span class="keyword">var</span> accelerometer_data;</span><br><span class="line">        <span class="keyword">var</span> tem_temperature;    </span><br><span class="line">          <span class="comment">//添加服务，特性相关参数</span></span><br><span class="line">        <span class="keyword">var</span> service_count;</span><br><span class="line">         <span class="keyword">var</span> services_discovered;</span><br><span class="line">         <span class="keyword">var</span> characteristics_discovered;  </span><br><span class="line">         <span class="keyword">var</span> characteristic_count ;               </span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">discoverOrdisconnectDevices</span>(<span class="params"></span>)// 断开连接</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;discoverOrdisconnectDevices&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!connected)</span><br><span class="line">            discoverDevices();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                selected_device.gatt.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)//连接</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>);</span><br><span class="line">       resetUI();</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//function input.temperature(): number;</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)// 搜索设备函数</span></span><br><span class="line"><span class="function">   </span>&#123; </span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);</span><br><span class="line">       <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,</span><br><span class="line">           optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE,TEMPERATURE_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">       &#125;        <span class="comment">//发现所有周边蓝牙设备</span></span><br><span class="line">      </span><br><span class="line">       navigator.bluetooth.requestDevice(options)</span><br><span class="line">       .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:&#x27;</span> + device.name);</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:&#x27;</span> + device.id);</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:&#x27;</span> + device.gatt.connected);</span><br><span class="line">           selected_device = device;</span><br><span class="line">           <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">           connect();</span><br><span class="line">           &#125;)</span><br><span class="line">       .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">           alert(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">           &#125;);       </span><br><span class="line">   &#125;       </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)//连接函数</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">       selected_device.gatt.connect()</span><br><span class="line">       .then(</span><br><span class="line">           <span class="function"><span class="keyword">function</span> (<span class="params">server</span>)</span></span><br><span class="line"><span class="function">           </span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&quot;Connected &quot;</span> + server.connected);</span><br><span class="line">               selected_device.addEventListener(<span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);</span><br><span class="line">               connected_server =server;</span><br><span class="line">               discoverSvcsAndChars(); <span class="comment">//在第5课基础上添加的函数</span></span><br><span class="line">               setConnectedStatus(<span class="literal">true</span>);</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="function"><span class="keyword">function</span> (<span class="params">error</span>)</span></span><br><span class="line"><span class="function">           </span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">              alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">              setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       );</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)//设置连接状态</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       connected=status;</span><br><span class="line">       <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML = status;</span><br><span class="line">       <span class="keyword">if</span>(status==<span class="literal">true</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Discover Devices&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">setDiscoveryStatus</span>(<span class="params">status</span>)//设置发现状态</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       services_discovered=status;</span><br><span class="line">       <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_discovered&#x27;</span>).innerHTML=status;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)//重置页面</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //发现服务和特性</span></span><br><span class="line"><span class="function">   </span>&#123;  </span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">       connected_server.getPrimaryServices()</span><br><span class="line">       .then(<span class="function"><span class="params">services</span> =&gt;</span> </span><br><span class="line">       &#123;    </span><br><span class="line">               has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">               has_led_service = <span class="literal">false</span>;    </span><br><span class="line">               has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">               has_temperature_service= <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">               services_discovered = <span class="number">0</span>;    </span><br><span class="line">               service_count = services.length;    </span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">   </span><br><span class="line">               services.forEach(<span class="function"><span class="params">service</span> =&gt;</span> </span><br><span class="line">               &#123;     </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                   &#125;   </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                   &#125;     </span><br><span class="line">                  <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                   &#125; </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == TEMPERATURE_SERVICE) <span class="comment">//温度</span></span><br><span class="line">                   &#123;      </span><br><span class="line">                       has_temperature_service = <span class="literal">true</span>;     </span><br><span class="line">                   &#125;        </span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                   service.getCharacteristics()</span><br><span class="line">                   .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                   &#123;      </span><br><span class="line">                       <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                       services_discovered++;     </span><br><span class="line">                       characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                       characteristic_count = characteristics.length;      </span><br><span class="line">                       characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> </span><br><span class="line">                       &#123;       </span><br><span class="line">                           characteristics_discovered++;       </span><br><span class="line">                           <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                           &#123;        </span><br><span class="line">                               accelerometer_data = characteristic;        </span><br><span class="line">                               has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;      </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               led_matrix_state = characteristic;        </span><br><span class="line">                               has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;       </span><br><span class="line">                           <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               model_number_string = characteristic;        </span><br><span class="line">                               has_model_name_string = <span class="literal">true</span>;       </span><br><span class="line">                           &#125;</span><br><span class="line">                           <span class="keyword">if</span>(characteristic.uuid == TEM_TEMPERATURE)  <span class="comment">//温度</span></span><br><span class="line">                           &#123;</span><br><span class="line">                               tem_temperature = characteristic; </span><br><span class="line">                               has_tem_temperature = <span class="literal">true</span>;</span><br><span class="line">                           &#125;     </span><br><span class="line">                           <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                           &#123;        </span><br><span class="line">                               <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                               setDiscoveryStatus(<span class="literal">true</span>);       </span><br><span class="line">                               <span class="comment">//setDiscoveryStatus(true);                  </span></span><br><span class="line">                           &#125;    </span><br><span class="line">                       &#125;);     </span><br><span class="line">                   &#125;);    </span><br><span class="line">               &#125;);  </span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;  </span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">randomLEDs</span>(<span class="params">ct</span>)   //控制<span class="title">led</span></span></span><br><span class="line"><span class="function">   </span>&#123;  </span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;randomLEDs&quot;</span>);   </span><br><span class="line">       <span class="comment">// state validation   </span></span><br><span class="line">       <span class="keyword">if</span> (!connected) </span><br><span class="line">       &#123;     </span><br><span class="line">           alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">           <span class="keyword">return</span>;   </span><br><span class="line">       &#125;   </span><br><span class="line">       <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">       &#123;     </span><br><span class="line">           alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">           <span class="keyword">return</span>;  </span><br><span class="line">       &#125;   </span><br><span class="line">       <span class="keyword">if</span> (!has_led_service) </span><br><span class="line">       &#123;     </span><br><span class="line">           alert(<span class="string">&quot;Error: The connected device does not contain the LED service&quot;</span>);     </span><br><span class="line">           <span class="keyword">return</span>;  </span><br><span class="line">       &#125;   </span><br><span class="line">       <span class="keyword">if</span> (!has_led_matrix_state) </span><br><span class="line">       &#123;      </span><br><span class="line">           alert(<span class="string">&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;</span>);      </span><br><span class="line">           <span class="keyword">return</span>;   </span><br><span class="line">       &#125;   </span><br><span class="line"><span class="keyword">var</span> led_array=[];</span><br><span class="line"><span class="keyword">if</span>(ct==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"> led_array[<span class="number">0</span>] =<span class="number">1</span>&lt;&lt;i;</span><br><span class="line"> led_array[<span class="number">1</span>] = <span class="number">1</span>&lt;&lt;i;   </span><br><span class="line"> led_array[<span class="number">2</span>] = <span class="number">1</span>&lt;&lt;i;   </span><br><span class="line"> led_array[<span class="number">3</span>] = <span class="number">1</span>&lt;&lt;i;   </span><br><span class="line"> led_array[<span class="number">4</span>] = <span class="number">1</span>&lt;&lt;i;</span><br><span class="line"> i++;</span><br><span class="line"> <span class="keyword">if</span>(i==<span class="number">5</span>)i=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ct==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">led_array[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">led_array[<span class="number">1</span>] = <span class="number">0</span>;   </span><br><span class="line">led_array[<span class="number">2</span>] = <span class="number">0</span>;   </span><br><span class="line">led_array[<span class="number">3</span>] = <span class="number">0</span>;   </span><br><span class="line">led_array[<span class="number">4</span>] = <span class="number">0</span>;</span><br><span class="line">led_array[j] = <span class="number">31</span>;</span><br><span class="line">j++;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">5</span>)j=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">     <span class="comment">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span></span><br><span class="line">    <span class="comment">/*led_array[0] =10;  </span></span><br><span class="line"><span class="comment">    led_array[1] = 31;   </span></span><br><span class="line"><span class="comment">    led_array[2] = 31;   </span></span><br><span class="line"><span class="comment">    led_array[3] = 14;   </span></span><br><span class="line"><span class="comment">    led_array[4] = 4;*/</span></span><br><span class="line">    <span class="comment">/*led_array[0] = 31;  </span></span><br><span class="line"><span class="comment">    led_array[1] = 17;   </span></span><br><span class="line"><span class="comment">    led_array[2] = 17;   </span></span><br><span class="line"><span class="comment">    led_array[3] = 17;   </span></span><br><span class="line"><span class="comment">    led_array[4] = 31; */</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> led_matrix_data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(led_array); </span><br><span class="line"></span><br><span class="line">    led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class="line">    .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;   </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;LED matrix state changed&#x27;</span>);  </span><br><span class="line">        &#125;)  </span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;   </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">        alert(<span class="string">&#x27;Error: &#x27;</span> + error);   <span class="keyword">return</span>;  </span><br><span class="line">        &#125;); </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readModelNumber</span>(<span class="params"></span>)  // 蓝牙信息服务</span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;readModelNumber&quot;</span>);   </span><br><span class="line">    <span class="comment">// state validation   </span></span><br><span class="line">    <span class="keyword">if</span> (!connected) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">if</span> (!has_device_information_service) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: The connected device does not contain the device information service&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">if</span> (!has_model_name_string) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: The connected device does not contain the model name string characteristic&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">    model_number_string.readValue()</span><br><span class="line">    .then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;   </span><br><span class="line">        data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(value.buffer);   </span><br><span class="line">        model_number_string = <span class="keyword">new</span> TextDecoder(<span class="string">&quot;utf-8&quot;</span>).decode(data);  </span><br><span class="line">        <span class="built_in">console</span>.log(model_number_string);   </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;model_number&quot;</span>).innerHTML = model_number_string;  </span><br><span class="line">        &#125;)  </span><br><span class="line">    .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">        alert(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">        &#125;); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">accelerometer</span>(<span class="params"></span>)   //加速度传感器</span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;accelerometer&quot;</span>);   </span><br><span class="line">    <span class="comment">// state validation   </span></span><br><span class="line">    <span class="keyword">if</span> (!connected) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">if</span> (!has_accelerometer_service) </span><br><span class="line">    &#123;     </span><br><span class="line">        alert(<span class="string">&quot;Error: The connected device does not contain the accelerometer service&quot;</span>);     </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">if</span> (!has_accelerometer_data) </span><br><span class="line">    &#123;      </span><br><span class="line">        alert(<span class="string">&quot;Error: The connected device does not contain the accelerometer_data characteristic&quot;</span>);      </span><br><span class="line">        <span class="keyword">return</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    accelerometer_data.readValue()</span><br><span class="line">   .then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">     buffer = value.buffer;</span><br><span class="line">     dataview = <span class="keyword">new</span> <span class="built_in">DataView</span>(buffer);</span><br><span class="line">     X = dataview.getUint16(<span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">     Y = dataview.getUint16(<span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">     Z = dataview.getUint16(<span class="number">4</span>, <span class="literal">true</span>);</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&quot;X=&quot;</span> + X + <span class="string">&quot;, Y=&quot;</span> + Y + <span class="string">&quot;, Z+&quot;</span> + Z);</span><br><span class="line">     <span class="built_in">document</span>.getElementById(<span class="string">&quot;ac_data&quot;</span>).innerHTML = <span class="string">&quot;X=&quot;</span> + X + <span class="string">&quot;, Y=&quot;</span> + Y + <span class="string">&quot;,Z=&quot;</span> + Z;</span><br><span class="line">       &#125;)  </span><br><span class="line">   .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;  </span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">       alert(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">       <span class="keyword">return</span>;  </span><br><span class="line">       &#125;);</span><br><span class="line"> &#125;  </span><br><span class="line"> </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;  Status</span><br><span class="line">    &lt;/h2&gt;</span><br><span class="line">        &lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Connected<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Service Discovery Completed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_connected&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_discovered&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;</span><br><span class="line">        Device Discovery or Disconnect</span><br><span class="line">    &lt;/h2&gt;</span><br><span class="line">    &lt;button id = <span class="string">&quot;btn_scan&quot;</span> onclick=<span class="string">&quot;discoverOrdisconnectDevices()&quot;</span>&gt;Start scan&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;Reading and Writing&lt;/h2&gt;</span><br><span class="line">    &lt;h3&gt;Write Characteristic - Randomise Lights&lt;/h3&gt;  </span><br><span class="line">    &lt;button id=<span class="string">&quot;btn_write&quot;</span> onclick=<span class="string">&quot;randomLEDs(0)&quot;</span>&gt;控制led行&lt;/button&gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btu_write&quot;</span> onclick=<span class="string">&quot;randomLEDs(1)&quot;</span>&gt;控制led列&lt;/button&gt;</span><br><span class="line">    &lt;h3&gt;Read Characteristic - Model number&lt;/h3&gt;  </span><br><span class="line">    &lt;button id=<span class="string">&quot;btn_read&quot;</span> onclick=<span class="string">&quot;readModelNumber()&quot;</span>&gt;Read Model number&lt;/button&gt; </span><br><span class="line">    &lt;div id=<span class="string">&quot;model_number&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;h3&gt;accelerometer_data&lt;/h3&gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btn_readAC&quot;</span> onclick=<span class="string">&quot;accelerometer()&quot;</span>&gt;Read accelerometer_data&lt;/button&gt; </span><br><span class="line">&lt;div id=<span class="string">&quot;ac_data&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>执行代码，浏览器会显示以下效果：</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200623134352.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200623134352.png" alt="img"></a></p><p>点击控制行和列，板子会相应出现不同的显示。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本章任务&quot;&gt;&lt;a href=&quot;#本章任务&quot; class=&quot;headerlink&quot; title=&quot;本章任务&quot;&gt;&lt;/a&gt;本章任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用网页控制矩阵上的行和列&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;相关代码&quot;&gt;&lt;a href=&quot;#相关代码&quot; cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>读写特性</title>
    <link href="https://lgx06.github.io/2020/09/15/%E8%AF%BB%E5%86%99%E7%89%B9%E6%80%A7/"/>
    <id>https://lgx06.github.io/2020/09/15/%E8%AF%BB%E5%86%99%E7%89%B9%E6%80%A7/</id>
    <published>2020-09-15T10:19:57.000Z</published>
    <updated>2020-09-20T10:10:44.741Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本节任务"><a href="#本节任务" class="headerlink" title="本节任务"></a>本节任务</h2><ul><li>通过读写特性读取BBC板名称</li><li>控制LED灯的显示</li></ul><h3 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>    selected_device;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>    connected_server;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>    connected=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>    services_discovered=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">         <span class="comment">//在第5课上添加以下内容</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// presence of services and characteristics </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_accelerometer_service = <span class="literal">false</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_accelerometer_data = <span class="literal">false</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_led_service = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_led_matrix_state = <span class="literal">false</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_device_information_service = <span class="literal">false</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_model_name_string = <span class="literal">false</span>; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_temperature_service =<span class="literal">false</span>;    <span class="comment">//温度</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> has_tem_temperature = <span class="literal">false</span>;  </span></span><br><span class="line"><span class="javascript">         <span class="comment">// service UUIDs </span></span></span><br><span class="line"><span class="javascript">       ACCELEROMETER_SERVICE = <span class="string">&#x27;e95d0753-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span></span><br><span class="line"><span class="javascript">       LED_SERVICE = <span class="string">&#x27;e95dd91d-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span></span><br><span class="line"><span class="javascript">       DEVICE_INFORMATION_SERVICE = <span class="string">&#x27;0000180a-0000-1000-8000-00805f9b34fb&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       TEMPERATURE_SERVICE = <span class="string">&#x27;e95d6100-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span></span><br><span class="line"><span class="javascript">       <span class="comment">// characteristic UUIDs </span></span></span><br><span class="line"><span class="javascript">       ACCELEROMETER_DATA = <span class="string">&#x27;e95dca4b-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span></span><br><span class="line"><span class="javascript">       LED_MATRIX_STATE  = <span class="string">&#x27;e95d7b77-251d-470a-a062-fa1922dfa9a8&#x27;</span>; </span></span><br><span class="line"><span class="javascript">       MODEL_NUMBER_STRING = <span class="string">&#x27;00002a24-0000-1000-8000-00805f9b34fb&#x27;</span>;</span></span><br><span class="line"><span class="javascript">       TEM_TEMPERATURE = <span class="string">&#x27;e95d1b25-251d-470a-a062-fa1922dfa9a8&#x27;</span>;  </span></span><br><span class="line"><span class="javascript">       <span class="comment">// cached characteristics var accelerometer_data; </span></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> led_matrix_state; </span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> model_number_string;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> accelerometer_data;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tem_temperature;    </span></span><br><span class="line"><span class="javascript">          <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> service_count;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> services_discovered;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> characteristics_discovered;  </span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> characteristic_count ;               </span></span><br><span class="line"><span class="javascript">         <span class="function"><span class="keyword">function</span> <span class="title">discoverOrdisconnectDevices</span>(<span class="params"></span>)</span></span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;discoverOrdisconnectDevices&quot;</span>);</span></span><br><span class="line">            if(!connected)</span><br><span class="line">            discoverDevices();</span><br><span class="line"><span class="javascript">            <span class="keyword">else</span></span></span><br><span class="line">            &#123;</span><br><span class="line">                selected_device.gatt.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onDisconnected</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;onDisconnected&quot;</span>);</span><br><span class="line">        resetUI();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//function input.temperature(): number;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">discoverDevices</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;discoverDevices&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> options = &#123;<span class="attr">acceptAllDevices</span>:<span class="literal">true</span>,</span><br><span class="line">            optionalServices: [DEVICE_INFORMATION_SERVICE, ACCELEROMETER_SERVICE, LED_SERVICE,TEMPERATURE_SERVICE]  <span class="comment">//在第5节课上添加</span></span><br><span class="line">        &#125;        <span class="comment">//发现所有周边蓝牙设备</span></span><br><span class="line">       </span><br><span class="line">        navigator.bluetooth.requestDevice(options)</span><br><span class="line">        .then(<span class="function"><span class="params">device</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Name:&#x27;</span> + device.name);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Id:&#x27;</span> + device.id);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Connected:&#x27;</span> + device.gatt.connected);</span><br><span class="line">            selected_device = device;</span><br><span class="line">            <span class="built_in">console</span>.log(selected_device);</span><br><span class="line">            connect();</span><br><span class="line">            &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            alert(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;ERROR&#x27;</span> +error);</span><br><span class="line">            &#125;);       </span><br><span class="line">    &#125;       </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;connecting&quot;</span>);</span><br><span class="line">        selected_device.gatt.connect()</span><br><span class="line">        .then(</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params">server</span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Connected to&quot;</span> + server.device.id);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Connected &quot;</span> + server.connected);</span><br><span class="line">                selected_device.addEventListener(<span class="string">&#x27;gattserverdisconnected&#x27;</span>,onDisconnected);</span><br><span class="line">                connected_server =server;</span><br><span class="line">                discoverSvcsAndChars(); <span class="comment">//在第5课基础上添加的函数</span></span><br><span class="line">                setConnectedStatus(<span class="literal">true</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params">error</span>)</span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">               alert(<span class="string">&quot;ERROR:could not connct-&quot;</span> + error);</span><br><span class="line">               setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setConnectedStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        connected=status;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_connected&#x27;</span>).innerHTML = status;</span><br><span class="line">        <span class="keyword">if</span>(status==<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Disconnect&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btn_scan&#x27;</span>).innerHTML = <span class="string">&quot;Discover Devices&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setDiscoveryStatus</span>(<span class="params">status</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        services_discovered=status;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status_discovered&#x27;</span>).innerHTML=status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">resetUI</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        setConnectedStatus(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">discoverSvcsAndChars</span>(<span class="params"></span>)    //在第5课基础上添加的函数</span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;discoverSvcsAndChars server=&quot;</span> + connected_server); </span><br><span class="line">        connected_server.getPrimaryServices()</span><br><span class="line">        .then(<span class="function"><span class="params">services</span> =&gt;</span> </span><br><span class="line">        &#123;    </span><br><span class="line">                has_accelerometer_service = <span class="literal">false</span>;    </span><br><span class="line">                has_led_service = <span class="literal">false</span>;    </span><br><span class="line">                has_device_information_service = <span class="literal">false</span>; </span><br><span class="line">                has_temperature_service= <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                services_discovered = <span class="number">0</span>;    </span><br><span class="line">                service_count = services.length;    </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;Got &quot;</span> + service_count + <span class="string">&quot; services&quot;</span>); </span><br><span class="line">    </span><br><span class="line">                services.forEach(<span class="function"><span class="params">service</span> =&gt;</span> </span><br><span class="line">                &#123;     </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == ACCELEROMETER_SERVICE)</span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_accelerometer_service = <span class="literal">true</span>;    </span><br><span class="line">                    &#125;   </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == LED_SERVICE) </span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_led_service = <span class="literal">true</span>;     </span><br><span class="line">                    &#125;     </span><br><span class="line">                   <span class="keyword">if</span> (service.uuid == DEVICE_INFORMATION_SERVICE) </span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_device_information_service = <span class="literal">true</span>;     </span><br><span class="line">                    &#125; </span><br><span class="line">                    <span class="keyword">if</span> (service.uuid == TEMPERATURE_SERVICE) <span class="comment">//温度</span></span><br><span class="line">                    &#123;      </span><br><span class="line">                        has_temperature_service = <span class="literal">true</span>;     </span><br><span class="line">                    &#125;        </span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">&#x27;Getting Characteristics for service &#x27;</span> + service.uuid);     </span><br><span class="line">                    service.getCharacteristics()</span><br><span class="line">                    .then(<span class="function"><span class="params">characteristics</span> =&gt;</span> </span><br><span class="line">                    &#123;      </span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">&#x27;&gt; Service: &#x27;</span> + service.uuid);      </span><br><span class="line">                        services_discovered++;     </span><br><span class="line">                        characteristics_discovered = <span class="number">0</span>;      </span><br><span class="line">                        characteristic_count = characteristics.length;      </span><br><span class="line">                        characteristics.forEach(<span class="function"><span class="params">characteristic</span> =&gt;</span> </span><br><span class="line">                        &#123;       </span><br><span class="line">                            characteristics_discovered++;       </span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">&#x27;&gt;&gt; Characteristic: &#x27;</span> + characteristic.uuid);       </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == ACCELEROMETER_DATA)</span><br><span class="line">                            &#123;        </span><br><span class="line">                                accelerometer_data = characteristic;        </span><br><span class="line">                                has_accelerometer_data = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;      </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == LED_MATRIX_STATE) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                led_matrix_state = characteristic;        </span><br><span class="line">                                has_led_matrix_state = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;       </span><br><span class="line">                            <span class="keyword">if</span> (characteristic.uuid == MODEL_NUMBER_STRING) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                model_number_string = characteristic;        </span><br><span class="line">                                has_model_name_string = <span class="literal">true</span>;       </span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span>(characteristic.uuid == TEM_TEMPERATURE)  <span class="comment">//温度</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                tem_temperature = characteristic; </span><br><span class="line">                                has_tem_temperature = <span class="literal">true</span>;</span><br><span class="line">                            &#125;     </span><br><span class="line">                            <span class="keyword">if</span> (services_discovered == service_count &amp;&amp; characteristics_discovered == characteristic_count) </span><br><span class="line">                            &#123;        </span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">&quot;FINISHED DISCOVERY&quot;</span>); </span><br><span class="line">                                setDiscoveryStatus(<span class="literal">true</span>);       </span><br><span class="line">                                <span class="comment">//setDiscoveryStatus(true);                  </span></span><br><span class="line">                            &#125;    </span><br><span class="line">                        &#125;);     </span><br><span class="line">                    &#125;);    </span><br><span class="line">                &#125;);  </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randomLEDs</span>(<span class="params"></span>)   //第6课上添加</span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;randomLEDs&quot;</span>);   </span><br><span class="line">        <span class="comment">// state validation   </span></span><br><span class="line">        <span class="keyword">if</span> (!connected) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">if</span> (!has_led_service) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: The connected device does not contain the LED service&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">if</span> (!has_led_matrix_state) </span><br><span class="line">        &#123;      </span><br><span class="line">            alert(<span class="string">&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;</span>);      </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">var</span> led_array = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>];   </span><br><span class="line"></span><br><span class="line">         <span class="comment">// Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span></span><br><span class="line">        led_array[<span class="number">0</span>] =<span class="number">10</span>;  </span><br><span class="line">        led_array[<span class="number">1</span>] = <span class="number">31</span>;   </span><br><span class="line">        led_array[<span class="number">2</span>] = <span class="number">31</span>;   </span><br><span class="line">        led_array[<span class="number">3</span>] = <span class="number">14</span>;   </span><br><span class="line">        led_array[<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line">        <span class="comment">/*led_array[0] = 31;  </span></span><br><span class="line"><span class="comment">        led_array[1] = 17;   </span></span><br><span class="line"><span class="comment">        led_array[2] = 17;   </span></span><br><span class="line"><span class="comment">        led_array[3] = 17;   </span></span><br><span class="line"><span class="comment">        led_array[4] = 31; */</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">var</span> led_matrix_data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(led_array); </span><br><span class="line"></span><br><span class="line">        led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class="line">        .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;   </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;LED matrix state changed&#x27;</span>);  </span><br><span class="line">            &#125;)  </span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;   </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">            alert(<span class="string">&#x27;Error: &#x27;</span> + error);   <span class="keyword">return</span>;  </span><br><span class="line">            &#125;); </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">readModelNumber</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;readModelNumber&quot;</span>);   </span><br><span class="line">        <span class="comment">// state validation   </span></span><br><span class="line">        <span class="keyword">if</span> (!connected) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: Discover and connect to a device before using this function&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">if</span> (!services_discovered) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: Service discovery has not yet completed&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">if</span> (!has_device_information_service) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: The connected device does not contain the device information service&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">if</span> (!has_model_name_string) </span><br><span class="line">        &#123;     </span><br><span class="line">            alert(<span class="string">&quot;Error: The connected device does not contain the model name string characteristic&quot;</span>);     </span><br><span class="line">            <span class="keyword">return</span>;   </span><br><span class="line">        &#125;   </span><br><span class="line">        </span><br><span class="line">        model_number_string.readValue()  </span><br><span class="line">        .then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;   </span><br><span class="line">            data = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(value.buffer);   </span><br><span class="line">            model_number_string = <span class="keyword">new</span> TextDecoder(<span class="string">&quot;utf-8&quot;</span>).decode(data);  </span><br><span class="line">            <span class="built_in">console</span>.log(model_number_string);   </span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;model_number&quot;</span>).innerHTML = model_number_string;  </span><br><span class="line">            &#125;)  </span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;  </span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">            alert(<span class="string">&#x27;Error: &#x27;</span> + error);   </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">            &#125;); </span><br><span class="line">        &#125;     </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;  Status</span><br><span class="line">    &lt;/h2&gt;</span><br><span class="line">        &lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Connected<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;     <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Service Discovery Completed<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>   &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_connected&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">                &lt;td id=<span class="string">&quot;status_discovered&quot;</span>&gt; <span class="literal">false</span> &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;</span><br><span class="line">        Device Discovery or Disconnect</span><br><span class="line">    &lt;/h2&gt;</span><br><span class="line">    &lt;button id = <span class="string">&quot;btn_scan&quot;</span> onclick=<span class="string">&quot;discoverOrdisconnectDevices()&quot;</span>&gt;Start scan&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;Reading and Writing&lt;/h2&gt;</span><br><span class="line">    &lt;h3&gt;Write Characteristic - Randomise Lights&lt;/h3&gt;  </span><br><span class="line">    &lt;button id=<span class="string">&quot;btn_write&quot;</span> onclick=<span class="string">&quot;randomLEDs()&quot;</span>&gt;Randomise LEDs&lt;/button&gt;</span><br><span class="line">    &lt;h3&gt;Read Characteristic - Model number&lt;/h3&gt;  </span><br><span class="line">    &lt;button id=<span class="string">&quot;btn_read&quot;</span> onclick=<span class="string">&quot;readModelNumber()&quot;</span>&gt;Read Model number&lt;/button&gt; </span><br><span class="line">    &lt;div id=<span class="string">&quot;model_number&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>打开网页我们会发现以下效果：</p><p><a href="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200621124051.png"><img src="https://cdn.jsdelivr.net/gh/sunflower-air/clouding/images/20200621124051.png" alt="img"></a></p><p>具体的自己观察板子。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本节任务&quot;&gt;&lt;a href=&quot;#本节任务&quot; class=&quot;headerlink&quot; title=&quot;本节任务&quot;&gt;&lt;/a&gt;本节任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过读写特性读取BBC板名称&lt;/li&gt;
&lt;li&gt;控制LED灯的显示&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;相关代</summary>
      
    
    
    
    
  </entry>
  
</feed>
